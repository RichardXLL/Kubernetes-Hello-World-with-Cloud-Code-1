{
  "manifest": {
    "name": "loud-rejection",
    "version": "2.2.0",
    "description": "Make unhandled promise rejections fail loudly instead of the default silent fail",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/loud-rejection.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "test": "xo && nyc ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts",
      "register.js",
      "register.d.ts"
    ],
    "keywords": [
      "promise",
      "promises",
      "unhandled",
      "uncaught",
      "rejection",
      "loud",
      "fail",
      "catch",
      "throw",
      "handler",
      "exit",
      "debug",
      "debugging",
      "verbose"
    ],
    "dependencies": {
      "currently-unhandled": "^0.4.1",
      "signal-exit": "^3.0.2"
    },
    "devDependencies": {
      "ava": "^1.4.1",
      "bluebird": "^3.5.3",
      "coveralls": "^3.0.3",
      "delay": "^4.1.0",
      "execa": "^1.0.0",
      "get-stream": "^5.0.0",
      "nyc": "^13.3.0",
      "tsd": "^0.7.1",
      "xo": "^0.24.0"
    },
    "nyc": {
      "exclude": [
        "fixture.js"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-loud-rejection-2.2.0-4255eb6e9c74045b0edc021fa7397ab655a8517c-integrity/node_modules/loud-rejection/package.json",
    "readmeFilename": "readme.md",
    "readme": "# loud-rejection [![Build Status](https://travis-ci.org/sindresorhus/loud-rejection.svg?branch=master)](https://travis-ci.org/sindresorhus/loud-rejection) [![Coverage Status](https://coveralls.io/repos/github/sindresorhus/loud-rejection/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/loud-rejection?branch=master)\n\n> Make unhandled promise rejections fail loudly instead of the default [silent fail](https://gist.github.com/benjamingr/0237932cee84712951a2)\n\nBy default, promises fail silently if you don't attach a `.catch()` handler to them.\n\nThis tool keeps track of unhandled rejections globally. If any remain unhandled at the end of your process, it logs them to STDERR and exits with code 1.\n\nUse this in top-level things like tests, CLI tools, apps, etc, **but not in reusable modules.**<br>\nNot needed in the browser as unhandled rejections are shown in the console.\n\n\n## Install\n\n```\n$ npm install loud-rejection\n```\n\n\n## Usage\n\n```js\nconst loudRejection = require('loud-rejection');\nconst promiseFunction = require('promise-fn');\n\n// Install the `unhandledRejection` listeners\nloudRejection();\n\npromiseFunction();\n```\n\nWithout this module it's more verbose and you might even miss some that will fail silently:\n\n```js\nconst promiseFunction = require('promise-fn');\n\nfunction error(error) {\n\tconsole.error(error.stack);\n\tprocess.exit(1);\n}\n\npromiseFunction().catch(error);\n```\n\n### Register script\n\nAlternatively to the above, you may simply require `loud-rejection/register` and the unhandledRejection listener will be automagically installed for you.\n\nThis is handy for ES2015 imports:\n\n```js\nimport 'loud-rejection/register';\n```\n\n\n## API\n\n### loudRejection([log])\n\n#### log\n\nType: `Function`<br>\nDefault: `console.error`\n\nCustom logging function to print the rejected promise. Receives the error stack.\n\n\n## Related\n\n- [hard-rejection](https://github.com/sindresorhus/hard-rejection) - Make unhandled promise rejections fail hard right away instead of the default silent fail\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-loud-rejection?utm_source=npm-loud-rejection&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/loud-rejection/-/loud-rejection-2.2.0.tgz#4255eb6e9c74045b0edc021fa7397ab655a8517c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/loud-rejection/-/loud-rejection-2.2.0.tgz",
    "hash": "4255eb6e9c74045b0edc021fa7397ab655a8517c",
    "integrity": "sha512-S0FayMXku80toa5sZ6Ro4C+s+EtFDCsyJNG/AzFMfX3AxD5Si4dZsgzm/kKnbOxHl5Cv8jBlno8+3XYIh2pNjQ==",
    "registry": "npm",
    "packageName": "loud-rejection",
    "cacheIntegrity": "sha512-S0FayMXku80toa5sZ6Ro4C+s+EtFDCsyJNG/AzFMfX3AxD5Si4dZsgzm/kKnbOxHl5Cv8jBlno8+3XYIh2pNjQ== sha1-QlXrbpx0BFsO3AIfpzl6tlWoUXw="
  },
  "registry": "npm",
  "hash": "4255eb6e9c74045b0edc021fa7397ab655a8517c"
}