{
  "manifest": {
    "name": "hast-util-raw",
    "version": "6.0.0",
    "description": "hast utility to reparse a tree",
    "license": "MIT",
    "keywords": [
      "unist",
      "hast",
      "hast-util",
      "util",
      "utility",
      "parse",
      "raw",
      "html"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/hast-util-raw.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hast-util-raw/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Christian Murphy",
        "email": "christian.murphy.42@gmail.com"
      }
    ],
    "files": [
      "index.js",
      "types/index.d.ts"
    ],
    "types": "types/index.d.ts",
    "dependencies": {
      "@types/hast": "^2.0.0",
      "hast-util-from-parse5": "^6.0.0",
      "hast-util-to-parse5": "^6.0.0",
      "html-void-elements": "^1.0.0",
      "parse5": "^6.0.0",
      "unist-util-position": "^3.0.0",
      "vfile": "^4.0.0",
      "web-namespaces": "^1.0.0",
      "xtend": "^4.0.0",
      "zwitch": "^1.0.0"
    },
    "devDependencies": {
      "browserify": "^16.0.0",
      "dtslint": "^3.0.0",
      "hastscript": "^5.0.0",
      "nyc": "^15.0.0",
      "prettier": "^2.0.0",
      "rehype-stringify": "^8.0.0",
      "remark-cli": "^8.0.0",
      "remark-parse": "^8.0.0",
      "remark-preset-wooorm": "^7.0.0",
      "remark-rehype": "^7.0.0",
      "tape": "^5.0.0",
      "tinyify": "^2.0.0",
      "unified": "^9.0.0",
      "unist-builder": "^2.0.0",
      "xo": "^0.32.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier . --write && xo --fix",
      "build-bundle": "browserify index.js -s hastUtilRaw > hast-util-raw.js",
      "build-mangle": "browserify index.js -s hastUtilRaw -p tinyify > hast-util-raw.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test-types": "dtslint types",
      "test": "npm run format && npm run build && npm run test-coverage && npm run test-types"
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "unicorn/prefer-includes": "off"
      },
      "ignores": [
        "hast-util-raw.js"
      ]
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-hast-util-raw-6.0.0-49a38f5107d483f83a139709f2f705f22e7e7d32-integrity/node_modules/hast-util-raw/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hast-util-raw\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**hast**][hast] utility to parse the [*tree*][tree] again, now supporting\nembedded `raw` nodes.\n\nOne of the reasons to do this is for “malformed” syntax trees: for example, say\nthere’s an `h1` element in a `p` element, this utility will make them siblings.\n\nAnother reason to do this is if raw HTML/XML is embedded in a syntax tree, which\ncan occur when coming from Markdown using [`mdast-util-to-hast`][to-hast].\n\nIf you’re working with [**remark**][remark] and/or\n[`remark-rehype`][remark-rehype], use [`rehype-raw`][rehype-raw] instead.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install hast-util-raw\n```\n\n## Use\n\n```js\nvar h = require('hastscript')\nvar raw = require('hast-util-raw')\n\nvar tree = h('div', [h('h1', ['Foo ', h('h2', 'Bar'), ' Baz'])])\n\nvar clean = raw(tree)\n\nconsole.log(clean)\n```\n\nYields:\n\n```js\n{ type: 'element',\n  tagName: 'div',\n  properties: {},\n  children:\n   [ { type: 'element',\n       tagName: 'h1',\n       properties: {},\n       children: [Object] },\n     { type: 'element',\n       tagName: 'h2',\n       properties: {},\n       children: [Object] },\n     { type: 'text', value: ' Baz' } ] }\n```\n\n## API\n\n### `raw(tree[, file])`\n\nGiven a [**hast**][hast] [*tree*][tree] and an optional [vfile][] (for\n[positional info][position-information]), return a new parsed-again\n[**hast**][hast] [*tree*][tree].\n\n## Security\n\nUse of `hast-util-raw` can open you up to a [cross-site scripting (XSS)][xss]\nattack as `raw` nodes are unsafe.\nThe following example shows how a raw node is used to inject a script that runs\nwhen loaded in a browser.\n\n```js\nraw(u('root', [u('raw', '<script>alert(1)</script>')]))\n```\n\nYields:\n\n```html\n<script>alert(1)</script>\n```\n\nDo not use this utility in combination with user input or use\n[`hast-util-santize`][sanitize].\n\n## Related\n\n*   [`mdast-util-to-hast`](https://github.com/syntax-tree/mdast-util-to-hast)\n    — transform mdast to hast\n*   [`rehype-raw`](https://github.com/rehypejs/rehype-raw)\n    — wrapper plugin for [rehype](https://github.com/rehypejs/rehype)\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/hast-util-raw.svg\n\n[build]: https://travis-ci.org/syntax-tree/hast-util-raw\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-raw.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/hast-util-raw\n\n[downloads-badge]: https://img.shields.io/npm/dm/hast-util-raw.svg\n\n[downloads]: https://www.npmjs.com/package/hast-util-raw\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/hast-util-raw.svg\n\n[size]: https://bundlephobia.com/result?p=hast-util-raw\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/syntax-tree\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/HEAD/code-of-conduct.md\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[position-information]: https://github.com/syntax-tree/unist#positional-information\n\n[hast]: https://github.com/syntax-tree/hast\n\n[to-hast]: https://github.com/syntax-tree/mdast-util-to-hast\n\n[vfile]: https://github.com/vfile/vfile\n\n[remark]: https://github.com/remarkjs/remark\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[rehype-raw]: https://github.com/rehypejs/rehype-raw\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[sanitize]: https://github.com/syntax-tree/hast-util-sanitize\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hast-util-raw/-/hast-util-raw-6.0.0.tgz#49a38f5107d483f83a139709f2f705f22e7e7d32",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hast-util-raw/-/hast-util-raw-6.0.0.tgz",
    "hash": "49a38f5107d483f83a139709f2f705f22e7e7d32",
    "integrity": "sha512-IQo6tv3bMMKxk53DljswliucCJOQxaZFCuKEJ7X80249dmJ1nA9LtOnnylsLlqTG98NjQ+iGcoLAYo9q5FRhRg==",
    "registry": "npm",
    "packageName": "hast-util-raw",
    "cacheIntegrity": "sha512-IQo6tv3bMMKxk53DljswliucCJOQxaZFCuKEJ7X80249dmJ1nA9LtOnnylsLlqTG98NjQ+iGcoLAYo9q5FRhRg== sha1-SaOPUQfUg/g6E5cJ8vcF8i5+fTI="
  },
  "registry": "npm",
  "hash": "49a38f5107d483f83a139709f2f705f22e7e7d32"
}