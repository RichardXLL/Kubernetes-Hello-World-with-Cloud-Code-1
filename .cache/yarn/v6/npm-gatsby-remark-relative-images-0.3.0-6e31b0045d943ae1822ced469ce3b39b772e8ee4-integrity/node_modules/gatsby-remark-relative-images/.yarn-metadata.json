{
  "manifest": {
    "name": "gatsby-remark-relative-images",
    "description": "Convert image src(s) in markdown to be relative to their node's parent directory. This will help gatsby-remark-images match images outside the node folder. For example, use with NetlifyCMS.",
    "version": "0.3.0",
    "author": {
      "name": "Daniel Mahon",
      "email": "daniel@mahonstudios.com"
    },
    "dependencies": {
      "babel-polyfill": "^6.26.0",
      "cheerio": "^1.0.0-rc.3",
      "deep-map": "^1.5.0",
      "is-relative-url": "^2.0.0",
      "lodash": "^4.17.15",
      "slash": "^2.0.0",
      "unist-util-select": "^1.5.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.5.5",
      "@babel/core": "^7.5.5",
      "@babel/preset-env": "^7.0.0-beta.44",
      "cross-env": "^5.1.4"
    },
    "keywords": [
      "gatsby",
      "gatsby-plugin",
      "image",
      "markdown",
      "relative",
      "netlifycms",
      "remark",
      "responsive images"
    ],
    "license": "MIT",
    "main": "index.js",
    "scripts": {
      "build": "babel src --out-dir .",
      "prepack": "cross-env NODE_ENV=production npm run build",
      "watch": "babel -w src --out-dir ."
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/danielmahon/gatsby-remark-relative-images.git"
    },
    "bugs": {
      "url": "https://github.com/danielmahon/gatsby-remark-relative-images/issues"
    },
    "homepage": "https://github.com/danielmahon/gatsby-remark-relative-images#readme",
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-gatsby-remark-relative-images-0.3.0-6e31b0045d943ae1822ced469ce3b39b772e8ee4-integrity/node_modules/gatsby-remark-relative-images/package.json",
    "readmeFilename": "README.md",
    "readme": "# gatsby-remark-relative-images\n\nConvert image src(s) in markdown to be relative to their node's parent directory. This will help [gatsby-remark-images](https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-remark-images) match images outside the node folder. For example, use with NetlifyCMS.\n\nNOTE: This was built for use with NetlifyCMS and should be considered a temporary solution until relative paths are supported. If it works for other use cases then great!\n\n## Install\n\n`npm install --save gatsby-remark-relative-images`\n\n## How to use\n\n```javascript\n// gatsby-config.js\nplugins: [\n  // Add static assets before markdown files\n  {\n    resolve: 'gatsby-source-filesystem',\n    options: {\n      path: `${__dirname}/static/uploads`,\n      name: 'uploads',\n    },\n  },\n  {\n    resolve: 'gatsby-source-filesystem',\n    options: {\n      path: `${__dirname}/src/pages`,\n      name: 'pages',\n    },\n  },\n  {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        // gatsby-remark-relative-images must\n        // go before gatsby-remark-images\n        {\n          resolve: `gatsby-remark-relative-images`,\n        },\n        {\n          resolve: `gatsby-remark-images`,\n          options: {\n            // It's important to specify the maxWidth (in pixels) of\n            // the content container as this plugin uses this as the\n            // base for generating different widths of each image.\n            maxWidth: 590,\n          },\n        },\n      ],\n    },\n  },\n];\n```\n\n### To convert frontmatter images\n\nUse the exported function `fmImagesToRelative` in your `gatsby-node.js`. This takes every node returned by your gatsby-source plugins and converts any absolute paths in markdown frontmatter data into relative paths if a matching file is found.\n\n```js\n// gatsby-node.js\nconst { fmImagesToRelative } = require('gatsby-remark-relative-images');\n\nexports.onCreateNode = ({ node }) => {\n  fmImagesToRelative(node);\n};\n```\n\n## FAQs\n\n### I'm getting the error: Field \"image\" must not have a selection since type \"String\" has no subfields\nThis is a common error when working with Netlify CMS (see issue [gatsby/gatsby#5990](https://github.com/gatsbyjs/gatsby/issues/5990)).\n\nThe application must include the `media` with `gatsby-source-filesystem` to include all the uploaded media and to make it available on build time. **Note:** The media folder must be included **before** the other content.\n\nFor example, an application that is using NetlifyCMS and this plugin, and has a content folder with markdown that comes from Netlify. Here's how the `gatsby-config.js` should look like:\n\n```js\nmodule.exports = {\n  plugins: [\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        path: `${__dirname}/static/assets`,\n        name: 'assets',\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        path: `${__dirname}/src/content`,\n        name: 'content',\n      },\n    },\n    `gatsby-transformer-sharp`,\n    `gatsby-plugin-sharp`,\n    {\n      resolve: `gatsby-transformer-remark`,\n      options: {\n        plugins: [\n          `gatsby-remark-relative-images`,\n          {\n            resolve: `gatsby-remark-images`,\n            options: {},\n          },\n        ],\n      },\n    },\n    `gatsby-plugin-netlify-cms`,\n  ],\n}\n```\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gatsby-remark-relative-images/-/gatsby-remark-relative-images-0.3.0.tgz#6e31b0045d943ae1822ced469ce3b39b772e8ee4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gatsby-remark-relative-images/-/gatsby-remark-relative-images-0.3.0.tgz",
    "hash": "6e31b0045d943ae1822ced469ce3b39b772e8ee4",
    "integrity": "sha512-DvFJiuqV/2I92OvKfVRQl0KxyOEE3zI/ALbxHFXHwCMzz+Pkd/HzmSyTLVyq9iBogzTQB+OpzDtgrTAtQwddzg==",
    "registry": "npm",
    "packageName": "gatsby-remark-relative-images",
    "cacheIntegrity": "sha512-DvFJiuqV/2I92OvKfVRQl0KxyOEE3zI/ALbxHFXHwCMzz+Pkd/HzmSyTLVyq9iBogzTQB+OpzDtgrTAtQwddzg== sha1-bjGwBF2UOuGCLO1GnOOzm3cujuQ="
  },
  "registry": "npm",
  "hash": "6e31b0045d943ae1822ced469ce3b39b772e8ee4"
}