{
  "manifest": {
    "name": "gatsby-cli",
    "description": "Gatsby command-line interface for creating new sites and running Gatsby commands",
    "version": "2.12.80",
    "author": {
      "name": "Kyle Mathews",
      "email": "mathews.kyle@gmail.com"
    },
    "bin": {
      "gatsby": "cli.js"
    },
    "bugs": {
      "url": "https://github.com/gatsbyjs/gatsby/issues"
    },
    "dependencies": {
      "@babel/code-frame": "^7.10.3",
      "@hapi/joi": "^15.1.1",
      "@types/common-tags": "^1.8.0",
      "better-opn": "^1.0.0",
      "chalk": "^2.4.2",
      "clipboardy": "^2.3.0",
      "common-tags": "^1.8.0",
      "configstore": "^5.0.1",
      "convert-hrtime": "^3.0.0",
      "envinfo": "^7.5.1",
      "execa": "^3.4.0",
      "fs-exists-cached": "^1.0.0",
      "fs-extra": "^8.1.0",
      "gatsby-core-utils": "^1.3.15",
      "gatsby-recipes": "^0.2.10",
      "gatsby-telemetry": "^1.3.26",
      "hosted-git-info": "^3.0.4",
      "ink": "^2.7.1",
      "ink-spinner": "^3.1.0",
      "is-valid-path": "^0.1.1",
      "lodash": "^4.17.15",
      "meant": "^1.0.1",
      "node-fetch": "^2.6.0",
      "opentracing": "^0.14.4",
      "pretty-error": "^2.1.1",
      "progress": "^2.0.3",
      "prompts": "^2.3.2",
      "react": "^16.8.0",
      "redux": "^4.0.5",
      "resolve-cwd": "^3.0.0",
      "semver": "^6.3.0",
      "signal-exit": "^3.0.3",
      "source-map": "0.7.3",
      "stack-trace": "^0.0.10",
      "strip-ansi": "^5.2.0",
      "update-notifier": "^4.1.0",
      "uuid": "3.4.0",
      "yargs": "^15.3.1",
      "yurnalist": "^1.1.2"
    },
    "devDependencies": {
      "@babel/cli": "^7.10.3",
      "@babel/core": "^7.10.3",
      "@types/hosted-git-info": "^3.0.0",
      "@types/yargs": "^15.0.4",
      "babel-preset-gatsby-package": "^0.5.2",
      "cross-env": "^5.2.1",
      "rimraf": "^3.0.2",
      "typescript": "^3.9.5"
    },
    "files": [
      "lib",
      "scripts",
      "cli.js"
    ],
    "homepage": "https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-cli#readme",
    "keywords": [
      "gatsby"
    ],
    "license": "MIT",
    "main": "lib/index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/gatsbyjs/gatsby.git",
      "directory": "packages/gatsby-cli"
    },
    "scripts": {
      "build": "babel src --out-dir lib --ignore \"**/__tests__\" --extensions \".ts,.js,.tsx\"",
      "prepare": "cross-env NODE_ENV=production npm run build && npm run typegen",
      "typegen": "rimraf \"lib/**/*.d.ts\" && tsc --emitDeclarationOnly --declaration --declarationDir lib/",
      "watch": "babel -w src --out-dir lib --ignore \"**/__tests__\"  --extensions \".ts,.js,.tsx\"",
      "postinstall": "node scripts/postinstall.js"
    },
    "engines": {
      "node": ">=10.13.0"
    },
    "gitHead": "a1f8a5054d52b1ccc704a91c292e8360043847f4",
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-gatsby-cli-2.12.80-3ef391ce9a40229b0da3301a8bdf83bc2ce8d82d-integrity/node_modules/gatsby-cli/package.json",
    "readmeFilename": "README.md",
    "readme": "# gatsby-cli\n\nThe Gatsby command line interface (CLI). It is used to perform common functionality, such as creating a Gatsby application based on a starter, spinning up a hot-reloading local development server, and more!\n\nLets you create new Gatsby apps using\n[Gatsby starters](https://www.gatsbyjs.org/docs/gatsby-starters/). It also lets you run commands on sites. The tool runs code from the `gatsby` package installed locally.\n\nThe Gatsby CLI (`gatsby-cli`) is packaged as an executable that can be used globally. The Gatsby CLI is available via [npm](https://www.npmjs.com/) and should be installed globally by running `npm install -g gatsby-cli` to use it locally.\n\nRun `gatsby --help` for full help.\n\nYou can also use the `package.json` script variant of these commands, typically exposed _for you_ with most [starters](https://www.gatsbyjs.org/docs/starters/). For example, if we want to make the [`gatsby develop`](#develop) command available in our application, we would open up `package.json` and add a script like so:\n\n```json:title=package.json\n{\n  \"scripts\": {\n    \"develop\": \"gatsby develop\"\n  }\n}\n```\n\n## CLI Commands\n\n1. [new](#new)\n2. [develop](#develop)\n3. [build](#build)\n4. [serve](#serve)\n5. [clean](#clean)\n6. [plugin](#plugin)\n7. [info](#info)\n8. [repl](#repl)\n\n### `new`\n\n```shell\ngatsby new [<site-name> [<starter-url>]]\n```\n\n| Argument    | Description                                                                                                                                                                                                                             |\n| ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| site-name   | Your Gatsby site name, which is also used to create the project directory.                                                                                                                                                              |\n| starter-url | A Gatsby starter URL or local file path. Defaults to [gatsby-starter-default](https://github.com/gatsbyjs/gatsby-starter-default); see the [Gatsby starters](https://www.gatsbyjs.org/docs/gatsby-starters/) docs for more information. |\n\n> Note: The `site-name` should only consist of letters and numbers. If you specify a `.`, `./` or a `<space>` in the name, `gatsby new` will throw an error.\n\n#### Examples\n\n- Create a Gatsby site named `my-awesome-site`, using the [default starter](https://github.com/gatsbyjs/gatsby-starter-default):\n\n```shell\ngatsby new my-awesome-site\n```\n\n- Create a Gatsby site named `my-awesome-blog-site`, using [gatsby-starter-blog](https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/):\n\n```shell\ngatsby new my-awesome-blog-site https://github.com/gatsbyjs/gatsby-starter-blog\n```\n\n- If you leave out both of the arguments, the CLI will run an interactive shell asking for these inputs:\n\n```shell\ngatsby new\n? What is your project called? › my-gatsby-project\n? What starter would you like to use? › - Use arrow-keys. Return to submit.\n❯  gatsby-starter-default\n   gatsby-starter-hello-world\n   gatsby-starter-blog\n   (Use a different starter)\n```\n\nSee the [Gatsby starters docs](https://www.gatsbyjs.org/docs/gatsby-starters/) for more details.\n\n### `develop`\n\nAt the root of a Gatsby app run `gatsby develop` to start the Gatsby\ndevelopment server.\n\n#### Options\n\n|     Option      | Description                                     |       Default        |\n| :-------------: | ----------------------------------------------- | :------------------: |\n| `-H`, `--host`  | Set host.                                       |     `localhost`      |\n| `-p`, `--port`  | Set port.                                       | `env.PORT` or `8000` |\n| `-o`, `--open`  | Open the site in your (default) browser for you |                      |\n| `-S`, `--https` | Use HTTPS                                       |                      |\n\nFollow the [Local HTTPS guide](https://www.gatsbyjs.org/docs/local-https/)\nto find out how you can set up an HTTPS development server using Gatsby.\n\n### `build`\n\nAt the root of a Gatsby app run `gatsby build` to do a production build of a site.\n\n#### Options\n\n|            Option            | Description                                                                                                        |            Default            |\n| :--------------------------: | ------------------------------------------------------------------------------------------------------------------ | :---------------------------: |\n|       `--prefix-paths`       | Build site with link paths prefixed (set pathPrefix in your config)                                                | `env.PREFIX_PATHS` or `false` |\n|        `--no-uglify`         | Build site without uglifying JS bundles (for debugging)                                                            |            `false`            |\n|         `--profile`          | Build site with react profiling. See https://www.gatsbyjs.org/docs/profiling-site-performance-with-react-profiler/ |            `false`            |\n| `--open-tracing-config-file` | Tracer configuration file (OpenTracing compatible). See https://www.gatsbyjs.org/docs/performance-tracing/         |                               |\n| `--no-color`, `--no-colors`  | Disables colored terminal output                                                                                   |            `false`            |\n\nFor prefixing paths, most will want to use the CLI flag (`gatsby build --prefix-paths`). For environments where you can't pass the --prefix-paths flag (ie Gatsby Cloud),the environment variable `PREFIX_PATHS` can be set to `true` to provide another way to prefix paths.\n\n### `serve`\n\nAt the root of a Gatsby app run `gatsby serve` to serve the production build of the site\n\n#### Options\n\n|      Option      | Description                                                                              |            Default            |\n| :--------------: | ---------------------------------------------------------------------------------------- | :---------------------------: |\n|  `-H`, `--host`  | Set host. Defaults to localhost                                                          |                               |\n|  `-p`, `--port`  | Set port. Defaults to 9000                                                               |                               |\n|  `-o`, `--open`  | Open the site in your (default) browser for you                                          |                               |\n| `--prefix-paths` | Serve site with link paths prefixed (if built with pathPrefix in your gatsby-config.js). | `env.PREFIX_PATHS` or `false` |\n\nFor prefixing paths, most will want to use the CLI flag (`gatsby build --prefix-paths`). For environments where you can't pass the --prefix-paths flag (ie Gatsby Cloud),the environment variable `PREFIX_PATHS` can be set to `true` to provide another way to prefix paths.\n\n### `clean`\n\nAt the root of a Gatsby app run `gatsby clean` to wipe out the cache (`.cache` folder) and `public` directories. This is useful **as a last resort** when your local project seems to have issues or content does not seem to be refreshing. Issues this may fix commonly include:\n\n- Stale data, e.g. this file/resource/etc. isn't appearing\n- GraphQL error, e.g. this GraphQL resource _should_ be present but is not\n- Dependency issues, e.g. invalid version, cryptic errors in console, etc.\n- Plugin issues, e.g. developing a local plugin and changes don't seem to be taking effect\n\n### `plugin`\n\nRun commands pertaining to gatsby plugins.\n\n#### `docs`\n\n`gatsby plugin docs`\n\nDirects you to documentation about using and creating plugins.\n\n### `info`\n\nAt the root of a Gatsby site run `gatsby info` to get helpful environment information which will be required when reporting a bug.\n\n#### Options\n\n|       Option        | Description                                             | Default |\n| :-----------------: | ------------------------------------------------------- | :-----: |\n| `-C`, `--clipboard` | Automagically copy environment information to clipboard | `false` |\n\n### `repl`\n\nGet a node repl with context of Gatsby environment\n\n<!-- TODO: add repl documentation link when ready -->\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gatsby-cli/-/gatsby-cli-2.12.80.tgz#3ef391ce9a40229b0da3301a8bdf83bc2ce8d82d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gatsby-cli/-/gatsby-cli-2.12.80.tgz",
    "hash": "3ef391ce9a40229b0da3301a8bdf83bc2ce8d82d",
    "integrity": "sha512-B8KUYMnepRSGexV4XjWhVAUUXy6TsmvUElQ0E3OgyI9RxpoKsCprJzhG96A+Df7Rgx+cPkV1fGArbOjfxnF4lQ==",
    "registry": "npm",
    "packageName": "gatsby-cli",
    "cacheIntegrity": "sha512-B8KUYMnepRSGexV4XjWhVAUUXy6TsmvUElQ0E3OgyI9RxpoKsCprJzhG96A+Df7Rgx+cPkV1fGArbOjfxnF4lQ== sha1-PvORzppAIpsNozAai9+DvCzo2C0="
  },
  "registry": "npm",
  "hash": "3ef391ce9a40229b0da3301a8bdf83bc2ce8d82d"
}