{
  "manifest": {
    "name": "netlify-identity-widget",
    "description": "Netlify Identity widget for easy integration",
    "version": "1.8.0",
    "author": {
      "name": "Matt Biilmann",
      "email": "matt@netlify.com"
    },
    "bugs": {
      "url": "https://github.com/netlify/netlify-identity-widget/issues"
    },
    "dependencies": {},
    "devDependencies": {
      "@babel/cli": "^7.10.1",
      "@babel/core": "^7.10.2",
      "@babel/plugin-proposal-class-properties": "^7.10.1",
      "@babel/plugin-proposal-decorators": "^7.10.1",
      "@babel/plugin-proposal-object-rest-spread": "^7.10.1",
      "@babel/plugin-transform-modules-commonjs": "^7.10.1",
      "@babel/plugin-transform-react-jsx": "^7.10.1",
      "@babel/polyfill": "^7.10.1",
      "@babel/preset-env": "^7.10.2",
      "@babel/register": "^7.10.1",
      "auto-changelog": "^2.0.0",
      "babel-eslint": "^10.1.0",
      "babel-jest": "^26.0.1",
      "babel-loader": "^8.1.0",
      "caniuse-lite": "^1.0.30000792",
      "cross-env": "^7.0.0",
      "css-loader": "^3.0.0",
      "eslint": "^7.2.0",
      "eslint-config-prettier": "^6.11.0",
      "eslint-plugin-import": "^2.21.1",
      "eslint-plugin-prettier": "^3.1.3",
      "eslint-plugin-react": "^7.20.0",
      "file-loader": "^6.0.0",
      "gh-release": "^3.4.0",
      "gotrue-js": "^0.9.26",
      "html-webpack-plugin": "^4.3.0",
      "jest": "^26.0.1",
      "mkdirp": "^1.0.0",
      "mobx": "^3.2.2",
      "mobx-preact": "^1.1.0",
      "npm-run-all": "^4.1.1",
      "postcss-cssnext": "^3.1.0",
      "postcss-import": "^11.0.0",
      "postcss-loader": "^2.0.3",
      "postcss-nested": "^3.0.0",
      "preact": "^8.1.0",
      "prettier": "^1.10.2",
      "raw-loader": "^0.5.1",
      "rimraf": "^2.6.2",
      "source-map-loader": "^0.2.1",
      "url-loader": "^0.6.2",
      "webpack": "^4.0.0",
      "webpack-cli": "^3.3.11",
      "webpack-dev-server": "^3.0.0",
      "webpack-node-externals": "^1.6.0"
    },
    "homepage": "https://identity.netlify.com/",
    "keywords": [
      "authentication",
      "identity",
      "netlify"
    ],
    "license": "MIT",
    "main": "./build/netlify-identity",
    "releaseVersion": "v1",
    "repository": {
      "type": "git",
      "url": "https://github.com/netlify/netlify-identity-widget.git"
    },
    "scripts": {
      "build": "run-p build:*",
      "build:bundle": "cross-env NODE_ENV=production webpack --config webpack.config.babel.js",
      "build:umd": "cross-env NODE_ENV=production webpack --config webpack.umd.config.babel.js",
      "changelog": "auto-changelog --template keepachangelog -p && git add CHANGELOG.md",
      "dev": "cross-env NODE_ENV=development webpack-dev-server --inline --progress --config webpack.config.babel.js",
      "format": "prettier --write 'src/**/*.js' '*.js'",
      "format-preview": "prettier --list-different 'src/**/*.js' '*.js'",
      "format-check": "prettier --check 'src/**/*.js' '*.js'",
      "prebuild": "rimraf build && mkdirp build",
      "prepublish": "run-s build",
      "prestart": "run-s build",
      "publish": "git push && git push --tags && gh-release",
      "react-demo": "cd example && yarn && yarn start",
      "release": "node ./script/release.js",
      "lint": "eslint src",
      "test": "run-s lint format-check test:unit",
      "test:unit": "jest",
      "test:unit:watch": "jest --watch",
      "version": "run-s release changelog"
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-netlify-identity-widget-1.8.0-a56ad82a7784b16523f023f7d26b41d77ed4b4ea-integrity/node_modules/netlify-identity-widget/package.json",
    "readmeFilename": "README.md",
    "readme": "# Netlify Identity Widget\n\nA component used to authenticate with Netlify's Identity service.\n[Live demo](https://identity.netlify.com)\n\nFor usage example with React and React Router, please see our `/example` folder and [read the README](https://github.com/netlify/netlify-identity-widget/tree/master/example).\n\n## What is Netlify Identity\n\nNetlify’s Identity service is a plug-and-play microservice for handling site\nfunctionalities like signups, logins, password recovery, user metadata, and\nroles. You can use it from single page apps instead of rolling your own, and\nintegrate with any service that understands JSON Web Tokens (JWTs).\n\nLearn more about this service from this\n[blog post](https://www.netlify.com/blog/2017/09/07/introducing-built-in-identity-service-to-streamline-user-management/).\n\n## Usage\n\nSimply include the widget on your site, and things like invites, confirmation\ncodes, etc, will start working.\n\nYou can add controls for the widget with HTML:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>A static website</title>\n\n  <!-- include the widget -->\n  <script type=\"text/javascript\" src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\"></script>\n</head>\n<body>\n  <!-- Add a menu:\n   Log in / Sign up - when the user is not logged in\n   Username / Log out - when the user is logged in\n  -->\n  <div data-netlify-identity-menu></div>\n\n  <!-- Add a simpler button:\n    Simple button that will open the modal.\n  -->\n  <div data-netlify-identity-button>Login with Netlify Identity</div>\n</body>\n</html>\n```\n\nThe widget will automatically attach itself to the window object as\n`window.netlifyIdentity`.\n\nYou can use this global object like this:\n\n```js\n// Open the modal\nnetlifyIdentity.open();\n\n// Get the current user:\nconst user = netlifyIdentity.currentUser();\n\n// Bind to events\nnetlifyIdentity.on('init', user => console.log('init', user));\nnetlifyIdentity.on('login', user => console.log('login', user));\nnetlifyIdentity.on('logout', () => console.log('Logged out'));\nnetlifyIdentity.on('error', err => console.error('Error', err));\nnetlifyIdentity.on('open', () => console.log('Widget opened'));\nnetlifyIdentity.on('close', () => console.log('Widget closed'));\n\n// Unbind from events\nnetlifyIdentity.off('login'); // to unbind all registered handlers\nnetlifyIdentity.off('login', handler); // to unbind a single handler\n\n// Close the modal\nnetlifyIdentity.close();\n\n// Log out the user\nnetlifyIdentity.logout();\n// refresh the user's JWT\n// Note: this method returns a promise.\nnetlifyIdentity.refresh().then((jwt)=>console.log(jwt))\n\n// Change language\nnetlifyIdentity.setLocale('en');\n```\n\n#### A note on script tag versioning\n\nThe `v1` in the above URL is not pinned to the major version of the module API,\nand will only reflect breaking changes in the markup API.\n\n### Module API\n\nNetlify Identity Widget also has a\n[module API](https://www.npmjs.com/package/netlify-identity-widget):\n\n```bash\nyarn add netlify-identity-widget\n```\n\nImport or require as usual:\n\n```js\nconst netlifyIdentity = require('netlify-identity-widget');\n\nnetlifyIdentity.init({\n  container: '#netlify-modal' // defaults to document.body,\n  locale: 'en' // defaults to 'en'\n});\n\nnetlifyIdentity.open(); // open the modal\nnetlifyIdentity.open('login'); // open the modal to the login tab\nnetlifyIdentity.open('signup'); // open the modal to the signup tab\n\nnetlifyIdentity.on('init', user => console.log('init', user));\nnetlifyIdentity.on('login', user => console.log('login', user));\nnetlifyIdentity.on('logout', () => console.log('Logged out'));\nnetlifyIdentity.on('error', err => console.error('Error', err));\nnetlifyIdentity.on('open', () => console.log('Widget opened'));\nnetlifyIdentity.on('close', () => console.log('Widget closed'));\n\n// Unbind from events\nnetlifyIdentity.off('login'); // to unbind all registered handlers\nnetlifyIdentity.off('login', handler); // to unbind a single handler\n\n// Close the modal\nnetlifyIdentity.close();\n\n// Log out the user\nnetlifyIdentity.logout();\n\n// refresh the user's JWT\n// Note: this method returns a promise.\nnetlifyIdentity.refresh().then((jwt)=>console.log(jwt))\n\n// Change language\nnetlifyIdentity.setLocale('en');\n\n// Access the underlying GoTrue JS client.\n// Note that doing things directly through the GoTrue client brings a risk of getting out of\n// sync between your state and the widget’s state.\nnetlifyIdentity.gotrue;\n```\n\n#### `netlifyIdentity.init([opts])`\n\nYou can pass an optional `opts` object to configure the widget when using the\nmodule API. Options include:\n\n```js\n{\n  container: '#some-query-selector'; // container to attach to\n  APIUrl: 'https://www.example.com/.netlify/functions/identity'; // Absolute url to endpoint.  ONLY USE IN SPECIAL CASES!\n  namePlaceholder: 'some-placeholder-for-Name'; // custom placeholder for name input form\n  locale: 'en'; // language code for translations - available: en, fr - default to en\n}\n```\n\nGenerally avoid setting the `APIUrl`. You should only set this when your app is\nserved from a domain that differs from where the identity endpoint is served.\nThis is common for Cordova or Electron apps where you host from localhost or a\nfile.\n\n## Localhost\n\nWhen using the widget on localhost, it will prompt for your Netlify SiteURL the\nfirst time it is opened. Entering the siteURL populates the browser's\nlocalStorage.\n\nThis allows the widget to know which instance of Netlify Identity it should\ncommunicate with zero configuration.\n\nE.g. If your Netlify site is served from the `olddvdscreensaver.com` domain\nname, enter the following when prompted by the widget when in development mode:\n\n```\nhttps://olddvdscreensaver.com\n```\n\n![](devmode.png)\n\n## List of Alternatives\n\n**Lowest level JS Library**: If you want to use the official Javascript bindings to GoTrue, Netlify's underlying Identity service written in Go, use https://github.com/netlify/gotrue-js\n\n**React bindings**: If you want a thin wrapper over Gotrue-js for React, `react-netlify-identity` is a \"headless\" library, meaning there is no UI exported and you will write your own UI to work with the authentication. https://github.com/sw-yx/react-netlify-identity\n\n**High level overlay**: If you want a \"widget\" overlay that gives you a nice UI out of the box, with a somewhat larger bundle, check https://github.com/netlify/netlify-identity-widget\n\n**High level popup**: If you want a popup window approach also with a nice UI out of the box, and don't mind the popup flow, check https://github.com/netlify/netlify-auth-providers\n\nYou can also see an example of wrapping netlify-identity-widget in a React Hook here: https://github.com/sw-yx/netlify-fauna-todo/blob/master/src/hooks/useNetlifyIdentity.js\n\n## FAQ\n\n* Typescript Typings are maintained by @nkprince007 ([see PR](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30689)): `npm install @types/netlify-identity-widget` and then `import * as NetlifyIdentityWidget from \"netlify-identity-widget\"` (or `import NetlifyIdentityWidget from \"netlify-identity-widget\"` if you have `--allowSyntheticDefaultImports` on)\n\n* If you experience a 404 while testing the Netlify Identity Widget on a local\n  environment, you can manually remove the netlifySiteURL from localStorage by\n  doing the following in the console.\n\n```js\nlocalStorage.removeItem('netlifySiteURL');\n```\n\n* See the `example` for how to integrate this widget with a react app.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Netlify <hello@netlify.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/netlify-identity-widget/-/netlify-identity-widget-1.8.0.tgz#a56ad82a7784b16523f023f7d26b41d77ed4b4ea",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/netlify-identity-widget/-/netlify-identity-widget-1.8.0.tgz",
    "hash": "a56ad82a7784b16523f023f7d26b41d77ed4b4ea",
    "integrity": "sha512-evc6OW6WsFectG31raqer/Ge1yZ3aweFja0RI85zvoHvjgiUPM5Je9xEnz1PELPRYW/Kz0ccANzng47RdgECBA==",
    "registry": "npm",
    "packageName": "netlify-identity-widget",
    "cacheIntegrity": "sha512-evc6OW6WsFectG31raqer/Ge1yZ3aweFja0RI85zvoHvjgiUPM5Je9xEnz1PELPRYW/Kz0ccANzng47RdgECBA== sha1-pWrYKneEsWUj8CP30mtB137UtOo="
  },
  "registry": "npm",
  "hash": "a56ad82a7784b16523f023f7d26b41d77ed4b4ea"
}