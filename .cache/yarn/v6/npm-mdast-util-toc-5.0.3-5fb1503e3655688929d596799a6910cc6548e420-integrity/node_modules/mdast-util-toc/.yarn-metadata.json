{
  "manifest": {
    "name": "mdast-util-toc",
    "version": "5.0.3",
    "description": "mdast utility to generate a table of contents from a tree",
    "license": "MIT",
    "keywords": [
      "unist",
      "mdast",
      "mdast-util",
      "util",
      "utility",
      "markdown",
      "table",
      "contents",
      "toc"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/mdast-util-toc.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/mdast-util-toc/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Jonathan Haines",
        "email": "jonno.haines@gmail.com",
        "url": "https://barrythepenguin.github.io"
      }
    ],
    "types": "types/index.d.ts",
    "files": [
      "types/index.d.ts",
      "lib",
      "index.js"
    ],
    "dependencies": {
      "@types/mdast": "^3.0.3",
      "@types/unist": "^2.0.3",
      "extend": "^3.0.2",
      "github-slugger": "^1.2.1",
      "mdast-util-to-string": "^1.0.5",
      "unist-util-is": "^4.0.0",
      "unist-util-visit": "^2.0.0"
    },
    "devDependencies": {
      "browserify": "^16.0.0",
      "dtslint": "^3.0.0",
      "nyc": "^15.0.0",
      "prettier": "^2.0.0",
      "remark": "^12.0.0",
      "remark-attr": "^0.10.0",
      "remark-cli": "^8.0.0",
      "remark-footnotes": "^1.0.0",
      "remark-parse": "^8.0.0",
      "remark-preset-wooorm": "^7.0.0",
      "remark-usage": "^8.0.0",
      "tape": "^4.0.0",
      "tinyify": "^2.0.0",
      "typescript": "^3.0.0",
      "unified": "^9.0.0",
      "unist-builder": "^2.0.0",
      "xo": "^0.29.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write \"**/*.{js,ts}\" && xo --fix",
      "build-bundle": "browserify . -s mdastUtilTOC > mdast-util-toc.js",
      "build-mangle": "browserify . -s mdastUtilTOC -p tinyify > mdast-util-toc.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test/index.js",
      "test-types": "dtslint types",
      "test": "npm run format && npm run build && npm run test-coverage && npm run test-types"
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "ignores": [
        "types",
        "mdast-util-toc.js"
      ]
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm",
        [
          "remark-usage",
          {
            "heading": "use"
          }
        ]
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-mdast-util-toc-5.0.3-5fb1503e3655688929d596799a6910cc6548e420-integrity/node_modules/mdast-util-toc/package.json",
    "readmeFilename": "readme.md",
    "readme": "# mdast-util-toc\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**mdast**][mdast] utility to generate table of contents.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install mdast-util-toc\n```\n\n## Use\n\nDependencies:\n\n```javascript\nvar u = require('unist-builder')\nvar toc = require('mdast-util-toc')\n```\n\nGiven a mdast tree:\n\n```javascript\nvar tree = u('root', [\n  u('heading', {depth: 1}, [u('text', 'Alpha')]),\n  u('heading', {depth: 2}, [u('text', 'Bravo')]),\n  u('heading', {depth: 3}, [u('text', 'Charlie')]),\n  u('heading', {depth: 2}, [u('text', 'Delta')])\n])\n\nvar table = toc(tree)\n```\n\nYields:\n\n```javascript\n{\n  index: null,\n  endIndex: null,\n  map: {\n    type: 'list',\n    ordered: false,\n    spread: true,\n    children: [ { type: 'listItem', spread: true, children: [Array] } ]\n  }\n}\n```\n\n## API\n\n### `toc(tree[, options])`\n\nGenerate a Table of Contents from a [tree][].\n\nLooks for the first [heading][] matching `options.heading` (case insensitive,\nsupports alt/title attributes for links and images too), and returns a table\nof contents ([list][]) for all following headings.\nIf no `heading` is specified, creates a table of contents for all headings in\n`tree`.\n`tree` is not changed.\n\nLinks to headings are based on GitHub’s style.\nOnly top-level headings (those not in [blockquote][]s or [list][]s), are used.\nThis default behavior can be changed by passing [`parents`][parents].\n\n##### `options`\n\n###### `options.heading`\n\n[Heading][] to look for (`string`), wrapped in `new RegExp('^(' + value + ')$',\n'i')`.\n\n###### `options.maxDepth`\n\nMaximum heading depth to include in the table of contents (`number`, default:\n`6`),\nThis is inclusive: when set to `3`, level three headings are included (those\nwith three hashes, `###`).\n\n###### `options.skip`\n\nHeadings to skip (`string`, optional), wrapped in\n`new RegExp('^(' + value + ')$', 'i')`.\nAny heading matching this expression will not be present in the table of\ncontents.\n\n###### `options.tight`\n\nWhether to compile list-items tightly (`boolean?`, default: `false`).\n\n###### `options.prefix`\n\nAdd a prefix to links to headings in the table of contents (`string?`,\ndefault: `null`).\nUseful for example when later going from [mdast][] to [hast][] and sanitizing\nwith [`hast-util-sanitize`][sanitize].\n\n###### `options.parents`\n\nAllows headings to be children of certain node [type][]s (default: the to `toc`\ngiven `tree`, to only allow top-level headings).\nInternally, uses [unist-util-is][is] to check, so `parents` can be any\n[`is`-compatible][is] test.\n\nFor example, this would allow headings under either `root` or `blockquote` to be\nused:\n\n```js\ntoc(tree, {parents: ['root', 'blockquote']})\n```\n\n##### Returns\n\nAn object representing the table of contents.\n\n###### Properties\n\n*   `index` (`number?`)\n    — [Index][] of the found table of contents [heading][] in `tree`.\n    `-1` if no heading was found, `null` if no `heading` was given\n*   `endIndex` (`number?`)\n    — [Index][] of the last node after `heading` before the TOC starts.\n    `-1` if no heading was found, `null` if no `heading` was given,\n    same as `index` if there are no nodes between `heading` and the\n    first heading in the TOC\n*   `map` (`Node?`)\n    — [List][] representing the generated table of contents.\n    `null` if no table of contents could be created, either because\n    no heading was found or because no following headings were found\n\n## Security\n\nUse of `mdast-util-toc` does not involve [**hast**][hast], user content, or\nchange the tree, so there are no openings for [cross-site scripting (XSS)][xss]\nattacks.\n\nInjecting `map` into the syntax tree may open you up to XSS attacks as existing\nnodes are copied into the table of contents.\nThe following example shows how an existing script is copied into the table of\ncontents.\n\nFor the following Markdown:\n\n```markdown\n# Alpha\n\n## Bravo<script>alert(1)</script>\n\n## Charlie\n```\n\nYields in `map`:\n\n```markdown\n-   [Alpha](#alpha)\n\n    -   [Bravo<script>alert(1)</script>](#bravoscriptalert1script)\n    -   [Charlie](#charlie)\n```\n\nAlways use [`hast-util-santize`][sanitize] when transforming to\n[**hast**][hast].\n\n## Related\n\n*   [`github-slugger`](https://github.com/Flet/github-slugger)\n    — Generate a slug just like GitHub does\n*   [`unist-util-visit`](https://github.com/syntax-tree/unist-util-visit)\n    — visit nodes\n*   [`unist-util-visit-parents`](https://github.com/syntax-tree/unist-util-visit-parents)\n    — like `visit`, but with a stack of parents\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Jonathan Haines][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/mdast-util-toc.svg\n\n[build]: https://travis-ci.org/syntax-tree/mdast-util-toc\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/mdast-util-toc.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/mdast-util-toc\n\n[downloads-badge]: https://img.shields.io/npm/dm/mdast-util-toc.svg\n\n[downloads]: https://www.npmjs.com/package/mdast-util-toc\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/mdast-util-toc.svg\n\n[size]: https://bundlephobia.com/result?p=mdast-util-toc\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/syntax-tree\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://barrythepenguin.github.io\n\n[contributing]: https://github.com/syntax-tree/.github/blob/master/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/master/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/master/code-of-conduct.md\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[hast]: https://github.com/syntax-tree/hast\n\n[sanitize]: https://github.com/syntax-tree/hast-util-sanitize\n\n[is]: https://github.com/syntax-tree/unist-util-is\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[type]: https://github.com/syntax-tree/unist#type\n\n[index]: https://github.com/syntax-tree/unist#index\n\n[heading]: https://github.com/syntax-tree/mdast#heading\n\n[list]: https://github.com/syntax-tree/mdast#list\n\n[blockquote]: https://github.com/syntax-tree/mdast#blockquote\n\n[parents]: #optionsparents\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Jonathan Haines <jonno.haines@gmail.com>\n\nCopyright (c) 2015 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mdast-util-toc/-/mdast-util-toc-5.0.3.tgz#5fb1503e3655688929d596799a6910cc6548e420",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mdast-util-toc/-/mdast-util-toc-5.0.3.tgz",
    "hash": "5fb1503e3655688929d596799a6910cc6548e420",
    "integrity": "sha512-A3xzcgC1XFHK0+abFmbINOxjwo7Bi0Nsfp3yTgTy5JHo2q2V6YZ5BVJreDWoK3szcLlSMvHqe8WPbjY50wAkow==",
    "registry": "npm",
    "packageName": "mdast-util-toc",
    "cacheIntegrity": "sha512-A3xzcgC1XFHK0+abFmbINOxjwo7Bi0Nsfp3yTgTy5JHo2q2V6YZ5BVJreDWoK3szcLlSMvHqe8WPbjY50wAkow== sha1-X7FQPjZVaIkp1ZZ5mmkQzGVI5CA="
  },
  "registry": "npm",
  "hash": "5fb1503e3655688929d596799a6910cc6548e420"
}