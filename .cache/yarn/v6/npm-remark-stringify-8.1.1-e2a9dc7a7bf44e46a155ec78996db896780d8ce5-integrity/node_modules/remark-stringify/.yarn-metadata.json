{
  "manifest": {
    "name": "remark-stringify",
    "version": "8.1.1",
    "description": "remark plugin to compile Markdown",
    "license": "MIT",
    "keywords": [
      "unified",
      "remark",
      "remark-plugin",
      "plugin",
      "markdown",
      "mdast",
      "markdown",
      "abstract",
      "syntax",
      "tree",
      "ast",
      "stringify",
      "serialize",
      "compile"
    ],
    "homepage": "https://remark.js.org/",
    "repository": {
      "type": "git",
      "url": "https://github.com/remarkjs/remark/tree/main/packages/remark-stringify"
    },
    "bugs": {
      "url": "https://github.com/remarkjs/remark/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Eugene Sharygin",
        "email": "eush77@gmail.com"
      }
    ],
    "files": [
      "index.js",
      "lib",
      "types/index.d.ts"
    ],
    "types": "types/index.d.ts",
    "dependencies": {
      "ccount": "^1.0.0",
      "is-alphanumeric": "^1.0.0",
      "is-decimal": "^1.0.0",
      "is-whitespace-character": "^1.0.0",
      "longest-streak": "^2.0.1",
      "markdown-escapes": "^1.0.0",
      "markdown-table": "^2.0.0",
      "mdast-util-compact": "^2.0.0",
      "parse-entities": "^2.0.0",
      "repeat-string": "^1.5.4",
      "state-toggle": "^1.0.0",
      "stringify-entities": "^3.0.0",
      "unherit": "^1.0.4",
      "xtend": "^4.0.1"
    },
    "scripts": {
      "test": "tape test.js"
    },
    "xo": false,
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-remark-stringify-8.1.1-e2a9dc7a7bf44e46a155ec78996db896780d8ce5-integrity/node_modules/remark-stringify/package.json",
    "readmeFilename": "readme.md",
    "readme": "# remark-stringify\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Chat][chat-badge]][chat]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n\n[Compiler][] for [**unified**][unified].\nSerializes [**mdast**][mdast] syntax trees to Markdown.\nUsed in the [**remark** processor][remark] but can be used on its own as well.\nCan be [extended][extend] to change how Markdown is serialized.\n\n## Sponsors\n\n<!--lint ignore no-html-->\n\n<table>\n  <tr valign=\"top\">\n    <td width=\"33.33%\" align=\"center\" colspan=\"2\">\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a><br>🥇<br><br>\n      <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=900&v=4\"></a>\n    </td>\n    <td width=\"33.33%\" align=\"center\" colspan=\"2\">\n      <a href=\"https://vercel.com\">Vercel</a><br>🥇<br><br>\n      <!--OC has a sharper image-->\n      <a href=\"https://vercel.com\"><img src=\"https://images.opencollective.com/vercel/d8a5bee/logo/512.png\"></a>\n    </td>\n    <td width=\"33.33%\" align=\"center\" colspan=\"2\">\n      <a href=\"https://www.netlify.com\">Netlify</a><br><br><br>\n      <!--OC has a sharper image-->\n      <a href=\"https://www.netlify.com\"><img src=\"https://images.opencollective.com/netlify/4087de2/logo/512.png\"></a>\n    </td>\n  </tr>\n  <tr valign=\"top\">\n    <td width=\"16.67%\" align=\"center\">\n      <a href=\"https://www.holloway.com\">Holloway</a><br><br><br>\n      <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=300&v=4\"></a>\n    </td>\n    <td width=\"16.67%\" align=\"center\">\n      <a href=\"https://themeisle.com\">ThemeIsle</a><br>🥉<br><br>\n      <a href=\"https://themeisle.com\"><img src=\"https://twitter-avatar.now.sh/themeisle\"></a>\n    </td>\n    <td width=\"16.67%\" align=\"center\">\n      <a href=\"https://boostio.co\">BoostIO</a><br>🥉<br><br>\n      <a href=\"https://boostio.co\"><img src=\"https://avatars1.githubusercontent.com/u/13612118?s=300&v=4\"></a>\n    </td>\n    <td width=\"16.67%\" align=\"center\">\n      <a href=\"https://expo.io\">Expo</a><br>🥉<br><br>\n      <a href=\"https://expo.io\"><img src=\"https://avatars1.githubusercontent.com/u/12504344?s=300&v=4\"></a>\n    </td>\n    <td width=\"50%\" align=\"center\" colspan=\"2\">\n      <br><br><br><br>\n      <a href=\"https://opencollective.com/unified\"><strong>You?</strong></a>\n    </td>\n  </tr>\n</table>\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install remark-stringify\n```\n\n## Use\n\n```js\nvar unified = require('unified')\nvar createStream = require('unified-stream')\nvar html = require('rehype-parse')\nvar rehype2remark = require('rehype-remark')\nvar stringify = require('remark-stringify')\n\nvar processor = unified()\n  .use(html)\n  .use(rehype2remark)\n  .use(stringify, {\n    bullet: '*',\n    fence: '~',\n    fences: true,\n    incrementListMarker: false\n  })\n\nprocess.stdin.pipe(createStream(processor)).pipe(process.stdout)\n```\n\n[See **unified** for more examples »][unified]\n\n## Contents\n\n*   [API](#api)\n    *   [`processor().use(stringify[, options])`](#processorusestringify-options)\n    *   [`stringify.Compiler`](#stringifycompiler)\n*   [Extending the `Compiler`](#extending-the-compiler)\n    *   [`Compiler#visitors`](#compilervisitors)\n    *   [`function visitor(node[, parent])`](#function-visitornode-parent)\n*   [Security](#security)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## API\n\n[See **unified** for API docs »][unified]\n\n### `processor().use(stringify[, options])`\n\nConfigure the `processor` to serialize [**mdast**][mdast] syntax trees to\nMarkdown.\n\n##### `options`\n\nOptions can be passed directly, or passed later through\n[`processor.data()`][data].\n\n###### `options.gfm`\n\nSerialize with the required escapes for GFM compatible Markdown (`boolean`,\ndefault: `true`).\n\n*   Escape pipes (`|`, for tables)\n*   Escape colons (`:`, for literal URLs)\n*   Escape tildes (`~`, for strike-through)\n\n###### `options.commonmark`\n\nSerialize for CommonMark compatible Markdown (`boolean`, default: `false`).\n\n*   Serialize adjacent block quotes separately\n*   Escape more characters using slashes, instead of as entities\n\n###### `options.pedantic`\n\n⚠️ Pedantic was previously used to mimic old-style Markdown mode: no tables, no\nfenced code, and with many bugs.\nIt’s currently still “working”, but please do not use it, it’ll be removed in\nthe future.\n\n###### `options.entities`\n\n⚠️ `entities` was previously used, but included bugs.\nIt’s currently still “working”, but please do not use it, it’ll be removed in\nthe future.\n\n###### `options.setext`\n\nSerialize headings, when possible, in Setext-style (`boolean`, default: `false`).\nUses `=` for level one headings and `-` for level two headings.\nOther heading levels are serialized as ATX (respecting `closeAtx`).\n\n###### `options.closeAtx`\n\nSerialize ATX headings with the same amount of closing hashes as opening hashes\n(`boolean`, default: `false`).\n\n###### `options.tableCellPadding`\n\nCreate tables with a space between cell delimiters (`|`) and content (`boolean`,\ndefault: `true`).\n\n###### `options.tablePipeAlign`\n\nAlign the delimiters (`|`) between table cells so that they all align nicely and\nform a grid (`boolean`, default: `true`).\n\n###### `options.stringLength`\n\nFunction passed to [`markdown-table`][markdown-table] to detect the length of a\ntable cell (`Function`, default: [`s => s.length`][string-length]).\nUsed to pad tables.\n\n###### `options.fence`\n\nMarker to use for fenced code blocks (`'~'` or ``'`'``, default: ``'`'``).\n\n###### `options.fences`\n\nCreate code blocks with a fence instead of indentation if they have no info\nstring (`boolean`, default: `false`).\n\nWhen `false`, code blocks are indented.\nCode blocks with an info string are always fenced.\n\n###### `options.bullet`\n\nMarker to use for the bullet of unordered list items (`'-'`, `'*'`, or `'+'`,\ndefault: `'-'`).\n\n###### `options.listItemIndent`\n\nStyle of indentation for list items (`'tab'`, `'mixed'` or `'1'`, default:\n`'tab'`).\n\n*   `'tab'`: use a tab stops (4 spaces)\n*   `'1'`: use one space\n*   `'mixed'`: use `1` for tight and `tab` for loose list items\n\n###### `options.incrementListMarker`\n\nIncrement ordered list item numbers (`boolean`, default: `true`).\n\nWhen `false`, all list item numbers will be the same.\n\n###### `options.tightDefinitions`\n\nSeparate definitions with a single line feed (`boolean`, default: `false`).\n\nWhen `false`, definitions will have blank lines between them, similar to other\nblocks.\n\n###### `options.rule`\n\nMarker to use for thematic breaks / horizontal rules (`'-'`, `'*'`, or `'_'`,\ndefault: `'*'`).\n\n###### `options.ruleRepetition`\n\nNumber of markers to use for thematic breaks / horizontal rules (`number`,\ndefault: `3`).\nMusts be `3` or more.\n\n###### `options.ruleSpaces`\n\nPlace a space between thematic break (horizontal rule) markers (`boolean`,\ndefault `true`).\n\n###### `options.strong`\n\nMarker to use for importance (`'_'` or `'*'`, default `'*'`).\n\n###### `options.emphasis`\n\nMarker to use for emphasis (`'_'` or `'*'`, default `'_'`).\n\n### `stringify.Compiler`\n\nAccess to the [compiler][], if you need it.\n\n## Extending the `Compiler`\n\nIf the `remark-stringify` plugin is used, it adds a [`Compiler`][compiler]\nconstructor function to the `processor`.\nOther plugins can add visitors to its prototype to change how Markdown is\nserialized.\n\nThe below plugin modifies a [visitor][] to add an extra blank line before\nheadings with a rank of `2`.\n\n```js\nmodule.exports = gap\n\nfunction gap() {\n  var Compiler = this.Compiler\n  var visitors = Compiler.prototype.visitors\n  var original = visitors.heading\n\n  visitors.heading = heading\n\n  function heading(node) {\n    return (node.depth === 2 ? '\\n' : '') + original.apply(this, arguments)\n  }\n}\n```\n\n### `Compiler#visitors`\n\nMap of types to [visitor][]s (`Object.<Function>`).\n\n### `function visitor(node[, parent])`\n\nSerialize `node`.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — Node to compile\n*   `parent` ([`Parent`][parent], optional) — Parent of `node`.\n    Not available on the root node\n\n###### Returns\n\n`string` — Serialized given `node`.\n\n## Security\n\nAs Markdown is sometimes used for HTML, and improper use of HTML can open you up\nto a [cross-site scripting (XSS)][xss] attack, use of remark can also be unsafe.\nWhen going to HTML, use remark in combination with the [**rehype**][rehype]\necosystem, and use [`rehype-sanitize`][sanitize] to make the tree safe.\n\nUse of remark plugins could also open you up to other attacks.\nCarefully assess each plugin and the risks involved in using them.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`remarkjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\nIdeas for new plugins and tools can be posted in [`remarkjs/ideas`][ideas].\n\nA curated list of awesome remark resources can be found in [**awesome\nremark**][awesome].\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/remarkjs/remark.svg\n\n[build]: https://travis-ci.org/remarkjs/remark\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark.svg\n\n[coverage]: https://codecov.io/github/remarkjs/remark\n\n[downloads-badge]: https://img.shields.io/npm/dm/remark-stringify.svg\n\n[downloads]: https://www.npmjs.com/package/remark-stringify\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-stringify.svg\n\n[size]: https://bundlephobia.com/result?p=remark-stringify\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/remark\n\n[health]: https://github.com/remarkjs/.github\n\n[contributing]: https://github.com/remarkjs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/remarkjs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/remarkjs/.github/blob/HEAD/code-of-conduct.md\n\n[ideas]: https://github.com/remarkjs/ideas\n\n[awesome]: https://github.com/remarkjs/awesome-remark\n\n[license]: https://github.com/remarkjs/remark/blob/main/license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[unified]: https://github.com/unifiedjs/unified\n\n[data]: https://github.com/unifiedjs/unified#processordatakey-value\n\n[remark]: https://github.com/remarkjs/remark/tree/main/packages/remark\n\n[compiler]: https://github.com/unifiedjs/unified#processorcompiler\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[parent]: https://github.com/syntax-tree/unist#parent\n\n[extend]: #extending-the-compiler\n\n[visitor]: #function-visitornode-parent\n\n[markdown-table]: https://github.com/wooorm/markdown-table\n\n[string-length]: https://github.com/wooorm/markdown-table#stringlengthcell\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[sanitize]: https://github.com/rehypejs/rehype-sanitize\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remark-stringify/-/remark-stringify-8.1.1.tgz#e2a9dc7a7bf44e46a155ec78996db896780d8ce5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remark-stringify/-/remark-stringify-8.1.1.tgz",
    "hash": "e2a9dc7a7bf44e46a155ec78996db896780d8ce5",
    "integrity": "sha512-q4EyPZT3PcA3Eq7vPpT6bIdokXzFGp9i85igjmhRyXWmPs0Y6/d2FYwUNotKAWyLch7g0ASZJn/KHHcHZQ163A==",
    "registry": "npm",
    "packageName": "remark-stringify",
    "cacheIntegrity": "sha512-q4EyPZT3PcA3Eq7vPpT6bIdokXzFGp9i85igjmhRyXWmPs0Y6/d2FYwUNotKAWyLch7g0ASZJn/KHHcHZQ163A== sha1-4qncenv0TkahVex4mW24lngNjOU="
  },
  "registry": "npm",
  "hash": "e2a9dc7a7bf44e46a155ec78996db896780d8ce5"
}