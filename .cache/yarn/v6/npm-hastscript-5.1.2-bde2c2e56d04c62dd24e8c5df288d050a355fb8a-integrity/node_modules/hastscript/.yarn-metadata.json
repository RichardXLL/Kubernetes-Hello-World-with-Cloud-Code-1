{
  "manifest": {
    "name": "hastscript",
    "version": "5.1.2",
    "description": "hast utility to create trees",
    "license": "MIT",
    "keywords": [
      "unist",
      "hast",
      "hast-util",
      "util",
      "utility",
      "html",
      "rehype",
      "vdom",
      "virtual",
      "dom",
      "hyperscript",
      "dsl"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/hastscript.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hastscript/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "files": [
      "index.js",
      "factory.js",
      "html.js",
      "svg.js",
      "svg-case-sensitive-tag-names.json"
    ],
    "dependencies": {
      "comma-separated-tokens": "^1.0.0",
      "hast-util-parse-selector": "^2.0.0",
      "property-information": "^5.0.0",
      "space-separated-tokens": "^1.0.0"
    },
    "devDependencies": {
      "browserify": "^16.0.0",
      "nyc": "^15.0.0",
      "prettier": "^1.0.0",
      "remark-cli": "^7.0.0",
      "remark-preset-wooorm": "^6.0.0",
      "svg-tag-names": "^2.0.0",
      "tape": "^4.0.0",
      "tinyify": "^2.0.0",
      "xo": "^0.27.0"
    },
    "scripts": {
      "generate": "node build",
      "format": "remark . -qfo && prettier --write \"**/*.js\" && xo --fix",
      "build-bundle": "browserify . -s hastscript > hastscript.js",
      "build-mangle": "browserify . -s hastscript -p tinyify > hastscript.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test": "npm run generate && npm run format && npm run build && npm run test-coverage"
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "no-self-compare": "off",
        "guard-for-in": "off"
      },
      "ignores": [
        "hastscript.js"
      ]
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-hastscript-5.1.2-bde2c2e56d04c62dd24e8c5df288d050a355fb8a-integrity/node_modules/hastscript/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hastscript\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**hast**][hast] utility to create [*trees*][tree] in HTML or SVG.\n\nSimilar to [`hyperscript`][hyperscript], [`virtual-dom/h`][virtual-hyperscript],\n[`React.createElement`][react], and [Vue’s `createElement`][vue],\nbut for [**hast**][hast].\n\nUse [`unist-builder`][u] to create any [**unist**][unist] tree.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install hastscript\n```\n\n## Use\n\n```js\nvar h = require('hastscript')\nvar s = require('hastscript/svg')\n\n// Children as an array:\nconsole.log(\n  h('.foo#some-id', [\n    h('span', 'some text'),\n    h('input', {type: 'text', value: 'foo'}),\n    h('a.alpha', {class: 'bravo charlie', download: 'download'}, [\n      'delta',\n      'echo'\n    ])\n  ])\n)\n\n// Children as arguments:\nconsole.log(\n  h(\n    'form',\n    {method: 'POST'},\n    h('input', {type: 'text', name: 'foo'}),\n    h('input', {type: 'text', name: 'bar'}),\n    h('input', {type: 'submit', value: 'send'})\n  )\n)\n\n// SVG:\nconsole.log(\n  s('svg', {xmlns: 'http://www.w3.org/2000/svg', viewbox: '0 0 500 500'}, [\n    s('title', 'SVG `<circle>` element'),\n    s('circle', {cx: 120, cy: 120, r: 100})\n  ])\n)\n```\n\nYields:\n\n```js\n{\n  type: 'element',\n  tagName: 'div',\n  properties: {className: ['foo'], id: 'some-id'},\n  children: [\n    {\n      type: 'element',\n      tagName: 'span',\n      properties: {},\n      children: [{type: 'text', value: 'some text'}]\n    },\n    {\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'text', value: 'foo'},\n      children: []\n    },\n    {\n      type: 'element',\n      tagName: 'a',\n      properties: {className: ['alpha', 'bravo', 'charlie'], download: true},\n      children: [{type: 'text', value: 'delta'}, {type: 'text', value: 'echo'}]\n    }\n  ]\n}\n{\n  type: 'element',\n  tagName: 'form',\n  properties: {method: 'POST'},\n  children: [\n    {\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'text', name: 'foo'},\n      children: []\n    },\n    {\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'text', name: 'bar'},\n      children: []\n    },\n    {\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'submit', value: 'send'},\n      children: []\n    }\n  ]\n}\n{\n  type: 'element',\n  tagName: 'svg',\n  properties: {xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 500 500'},\n  children: [\n    {\n      type: 'element',\n      tagName: 'title',\n      properties: {},\n      children: [{type: 'text', value: 'SVG `<circle>` element'}]\n    },\n    {\n      type: 'element',\n      tagName: 'circle',\n      properties: {cx: 120, cy: 120, r: 100},\n      children: []\n    }\n  ]\n}\n```\n\n## API\n\n### `h(selector?[, properties][, ...children])`\n\n### `s(selector?[, properties][, ...children])`\n\nDSL to create virtual [**hast**][hast] [*trees*][tree] for HTML or SVG.\n\n##### Parameters\n\n###### `selector`\n\nSimple CSS selector (`string`, optional).\nCan contain a tag name (`foo`), IDs (`#bar`), and classes (`.baz`).\nIf there is no tag name in the selector, `h` defaults to a `div` element,\nand `s` to a `g` element.\n`selector` is parsed by [`hast-util-parse-selector`][parse-selector].\n\n###### `properties`\n\nMap of properties (`Object.<*>`, optional).\n\n###### `children`\n\n(Lists of) child nodes (`string`, `Node`, `Array.<string|Node>`, optional).\nWhen strings are encountered, they are mapped to [`text`][text] nodes.\n\n##### Returns\n\n[`Element`][element].\n\n## Security\n\nUse of `hastscript` can open you up to a [cross-site scripting (XSS)][xss]\nattack as values are injected into the syntax tree.\nThe following example shows how a script is injected that runs when loaded in a\nbrowser.\n\n```js\nvar tree = {type: 'root', children: []}\n\ntree.children.push(h('script', 'alert(1)'))\n```\n\nYields:\n\n```html\n<script>alert(1)</script>\n```\n\nThe following example shows how an image is injected that fails loading and\ntherefore runs code in a browser.\n\n```js\nvar tree = {type: 'root', children: []}\n\n// Somehow someone injected these properties instead of an expected `src` and\n// `alt`:\nvar otherProps = {src: 'x', onError: 'alert(2)'}\n\ntree.children.push(h('img', {src: 'default.png', ...otherProps}))\n```\n\nYields:\n\n```html\n<img src=\"x\" onerror=\"alert(2)\">\n```\n\nThe following example shows how code can run in a browser because someone stored\nan object in a database instead of the expected string.\n\n```js\nvar tree = {type: 'root', children: []}\n\n// Somehow this isn’t the expected `'wooorm'`.\nvar username = {\n  type: 'element',\n  tagName: 'script',\n  children: [{type: 'text', value: 'alert(3)'}]\n}\n\ntree.children.push(h('span.handle', username))\n```\n\nYields:\n\n```html\n<span class=\"handle\"><script>alert(3)</script></span>\n```\n\nEither do not use user input in `hastscript` or use\n[`hast-util-santize`][sanitize].\n\n## Related\n\n*   [`unist-builder`](https://github.com/syntax-tree/unist-builder)\n    — Create any unist tree\n*   [`hast-to-hyperscript`](https://github.com/syntax-tree/hast-to-hyperscript)\n    — Convert a Node to React, Virtual DOM, Hyperscript, and more\n*   [`hast-util-from-dom`](https://github.com/syntax-tree/hast-util-from-dom)\n    — Transform a DOM tree to hast\n*   [`hast-util-select`](https://github.com/syntax-tree/hast-util-select)\n    — `querySelector`, `querySelectorAll`, and `matches`\n*   [`hast-util-to-html`](https://github.com/syntax-tree/hast-util-to-html)\n    — Stringify nodes to HTML\n*   [`hast-util-to-dom`](https://github.com/syntax-tree/hast-util-to-dom)\n    — Transform to a DOM tree\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/hastscript.svg\n\n[build]: https://travis-ci.org/syntax-tree/hastscript\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hastscript.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/hastscript\n\n[downloads-badge]: https://img.shields.io/npm/dm/hastscript.svg\n\n[downloads]: https://www.npmjs.com/package/hastscript\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/hastscript.svg\n\n[size]: https://bundlephobia.com/result?p=hastscript\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/syntax-tree\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/master/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/master/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/master/code-of-conduct.md\n\n[hyperscript]: https://github.com/dominictarr/hyperscript\n\n[virtual-hyperscript]: https://github.com/Matt-Esch/virtual-dom/tree/master/virtual-hyperscript\n\n[react]: https://reactjs.org/docs/glossary.html#react-elements\n\n[vue]: https://vuejs.org/v2/guide/render-function.html#createElement-Arguments\n\n[unist]: https://github.com/syntax-tree/unist\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[hast]: https://github.com/syntax-tree/hast\n\n[element]: https://github.com/syntax-tree/hast#element\n\n[text]: https://github.com/syntax-tree/hast#text\n\n[u]: https://github.com/syntax-tree/unist-builder\n\n[parse-selector]: https://github.com/syntax-tree/hast-util-parse-selector\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[sanitize]: https://github.com/syntax-tree/hast-util-sanitize\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hastscript/-/hastscript-5.1.2.tgz#bde2c2e56d04c62dd24e8c5df288d050a355fb8a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hastscript/-/hastscript-5.1.2.tgz",
    "hash": "bde2c2e56d04c62dd24e8c5df288d050a355fb8a",
    "integrity": "sha512-WlztFuK+Lrvi3EggsqOkQ52rKbxkXL3RwB6t5lwoa8QLMemoWfBuL43eDrwOamJyR7uKQKdmKYaBH1NZBiIRrQ==",
    "registry": "npm",
    "packageName": "hastscript",
    "cacheIntegrity": "sha512-WlztFuK+Lrvi3EggsqOkQ52rKbxkXL3RwB6t5lwoa8QLMemoWfBuL43eDrwOamJyR7uKQKdmKYaBH1NZBiIRrQ== sha1-veLC5W0Exi3SToxd8ojQUKNV+4o="
  },
  "registry": "npm",
  "hash": "bde2c2e56d04c62dd24e8c5df288d050a355fb8a"
}