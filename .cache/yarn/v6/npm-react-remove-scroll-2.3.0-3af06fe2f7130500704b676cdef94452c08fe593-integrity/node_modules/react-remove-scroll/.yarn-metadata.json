{
  "manifest": {
    "name": "react-remove-scroll",
    "version": "2.3.0",
    "description": "Disables scroll outside of `children` node.",
    "main": "dist/es5/index.js",
    "scripts": {
      "test": "ts-react-toolbox test",
      "bootstrap": "ts-react-toolbox init",
      "dev": "ts-react-toolbox dev",
      "test:ci": "ts-react-toolbox test --runInBand --coverage",
      "build": "rm -Rf ./dist && ts-react-toolbox build",
      "prepublish": "yarn build",
      "release": "ts-react-toolbox release",
      "lint": "ts-react-toolbox lint",
      "static": "ts-react-toolbox publish",
      "format": "ts-react-toolbox format",
      "analyze": "ts-react-toolbox analyze",
      "storybook": "start-storybook -p 6006",
      "build-storybook": "build-storybook",
      "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0"
    },
    "keywords": [
      "scroll"
    ],
    "author": {
      "name": "Anton Korzunov",
      "email": "thekashey@gmail.com"
    },
    "license": "MIT",
    "devDependencies": {
      "@babel/core": "^7.4.5",
      "@storybook/addon-actions": "^5.1.8",
      "@storybook/addon-links": "^5.1.8",
      "@storybook/addons": "^5.1.8",
      "@storybook/react": "^5.1.8",
      "@types/enzyme": "^3.9.3",
      "@types/enzyme-adapter-react-16": "^1.0.5",
      "@types/react": "^16.8.20",
      "babel-loader": "^8.0.6",
      "conventional-changelog-cli": "^2.0.25",
      "enzyme": "^3.10.0",
      "enzyme-adapter-react-16": "^1.14.0",
      "jsx-compress-loader": "^1.1.1",
      "react": "^16.8.6",
      "react-dom": "^16.8.6",
      "ts-react-toolbox": "^0.2.10"
    },
    "engines": {
      "node": ">=8.5.0"
    },
    "peerDependencies": {
      "@types/react": "^16.8.0",
      "react": "^16.8.0"
    },
    "peerDependenciesMeta": {
      "@types/react": {
        "optional": true
      }
    },
    "jsnext:main": "dist/es2015/index.js",
    "module": "dist/es2015/index.js",
    "types": "dist/es5/index.d.ts",
    "files": [
      "dist",
      "UI",
      "sidecar"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/theKashey/react-remove-scroll"
    },
    "dependencies": {
      "react-remove-scroll-bar": "^2.1.0",
      "react-style-singleton": "^2.1.0",
      "tslib": "^1.0.0",
      "use-callback-ref": "^1.2.3",
      "use-sidecar": "^1.0.1"
    },
    "sideEffects": [
      "**/sidecar.js"
    ],
    "resolutions": {
      "typescript": "^3.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-react-remove-scroll-2.3.0-3af06fe2f7130500704b676cdef94452c08fe593-integrity/node_modules/react-remove-scroll/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <h1>React-remove-üìú</h1>\n  <br/>\n   dont even scroll\n  <br/>\n  \n  <a href=\"https://www.npmjs.com/package/react-remove-scroll\">\n    <img src=\"https://img.shields.io/npm/v/react-remove-scroll.svg?style=flat-square\" />\n  </a>\n    \n  <a href=\"https://travis-ci.org/theKashey/react-remove-scroll\">\n   <img src=\"https://img.shields.io/travis/theKashey/react-remove-scroll.svg?style=flat-square\" alt=\"Build status\">\n  </a> \n\n  <a href=\"https://www.npmjs.com/package/react-remove-scroll\">\n   <img src=\"https://img.shields.io/npm/dm/react-remove-scroll.svg\" alt=\"npm downloads\">\n  </a> \n\n  <a href=\"https://bundlephobia.com/result?p=react-remove-scroll\">\n   <img src=\"https://img.shields.io/bundlephobia/minzip/react-remove-scroll.svg\" alt=\"bundle size\">\n  </a>   \n  <br/>\n</div>\n\nreact-remove-scroll\n====\n[![NPM version](https://img.shields.io/npm/v/react-remove-scroll.svg)](https://www.npmjs.com/package/react-remove-scroll)\n\nDisables scroll outside of `children` node.\n\n- üñ± mouse and touch devices friendly\n- üìà vertical and horizontal\n- üìú removes document scroll bar maintaining it space\n- ‚úÖ support nested scrollable elements\n- üï≥ supports react-portals (uses React Event system)\n- ‚ò†Ô∏è it could block literally any scroll anywhere\n\n# Usage\nJust wrap content, which should be scrollable, and everything else would not. \n```js\nimport {RemoveScroll} from 'react-remove-scroll';\n\n<RemoveScroll>\n  Only this content would be scrollable\n</RemoveScroll>  \n```\n\n`RemoveScroll` accept following props\n- `children`\n- `[enabled]` - activate or deactivate component behaviour without removing it.\n- `[allowPinchZoom=false]` - enabled \"pinch-n-zoom\" behavior. By default it might be prevented. However - pinch and zoom might break \"scroll isolation\", and __disabled by default__.\n- `[noIsolation=false]` - disables outer event capturing. Event capturing is React friendly and unlikely be a problem.\nBut if you are using _shadowbox_ of some sort - you dont need it.\n- `[inert=false]` - ‚ò†Ô∏è(be careful) disables events the rest of page completely using `pointer-events` expect the Lock(+shard). \nReact portals not friendly, might lead to production issues. Enable only for __rare__ cases, when you have to disable scrollbars somewhere on the page(except body, Lock and shards).  \n- `[forwardProps]` - will forward all props to the `children`\n- `[className]` - className for an internal div\n- `[removeScrollBar]` - to control scroll bar removal. Set to false, if you prefer to keep it (wheel and touch scroll is still disabled).\n\n# Size\n- (üß© full) 1.7kb after compression (excluding tslib).\n---\n- (üëÅ UI) __400b__, visual elements only\n- (üöó sidecar) 1.5kb, side effects\n```js\nimport {sidecar} from \"react-remove-scroll\";\nimport {RemoveScroll} from 'react-remove-scroll/UI';\n\nconst sidecar = sidecar(() => import('react-remove-scroll/sidecar'));\n\n<RemoveScroll sideCar={sidecar}>\n  Will load logic from a sidecar when needed\n</RemoveScroll>  \n```\n\n> Consider setting `-webkit-overflow-scrolling: touch;` on a document level for a proper mobile experience.\n\n## Internal div\nBut default RemoveScroll will create a div to handle and capture events.\nYou may specify `className` for it, if you need, or __remove it__.\n\nThe following code samples will produce the same output\n```js\n<RemoveScroll className=\"scroll\">\n  Only this content would be scrollable\n</RemoveScroll>\n```\n\n```js\n<RemoveScroll forwardProps>\n  <div className=\"scroll\"> //RemoveScroll will inject props to this div\n    Only this content would be scrollable\n  </div>\n</RemoveScroll> \n```\nPick the first one if you don't need a second.\n\n## Position:fixed elements\nTo properly size these elements please add a special className to them.\n```jsx\nimport {RemoveScroll} from 'react-remove-scroll';\n\n// to make \"width: 100%\"\n<div className={cx(classWithPositionFixed, RemoveScroll.classNames.fullWidth)} />\n\n// to make \"right:0\"\n<div className={cx(classWithPositionFixed, RemoveScroll.classNames.zeroRight)} />\n```\nSee [react-remove-scroll-bar](https://github.com/theKashey/react-remove-scroll-bar) documentation for details.\n\n## More than one lock\nWhen stacked more is active (default) only one (last) component would be active.\n\n## Over isolation\nThat could happen - \nyou disable scroll on the body, \nyou are suppressing all scroll and wheel events,\nand you are ghosting the rest of the page by the `inert` prop.\n\nOnly something inside Lock does exists for the browser, and that might be less than you expected.\n\nDont forget about `shard`, dont forget - `inert` is not portals friendly, dont forget - you dont need over isolation in most of the cases.\n\n> just be careful! \n\n# Performance\nTo do the job this library setup _non_ passive event listener. Chrome dev tools would complain about it, as a \nperformance no-op.\n\nWe have to use synchronous scroll/touch handler, and it may affect scrolling performance.\n\nConsider using `noIsolation` mode, if you have large scrollable areas.\n\n# Supported React versions\n- v1 supports React 15/16\n- v2 requires 16.8.0+ (hooks)\n\n# Scroll-Locky\nThis is a refactoring of another library - [react-scroll-locky](https://github.com/theKashey/react-scroll-locky) -\nto make package smaller and more react-portals friendly.\n\n## See also\n - [react-focus-on](https://github.com/theKashey/react-focus-on) - Finite Modal creator (uses Scroll-Locky) underneath.\n - [react-locky](https://github.com/theKashey/react-locky) - React event canceler\n - [react-scrolllock](https://github.com/jossmac/react-scrolllock) - React scroll lock\n - [scroll-lock](https://github.com/FL3NKEY/scroll-lock) - DOM scroll lock\n - [body-scroll-lock](https://github.com/willmcpo/body-scroll-lock) - DOM scroll lock\n \n > This package is relative smaller(1), more react friendly(2), works with non zero body margins(3), and has a better \"overscroll\" management. \n\n# License\nMIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-remove-scroll/-/react-remove-scroll-2.3.0.tgz#3af06fe2f7130500704b676cdef94452c08fe593",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-remove-scroll/-/react-remove-scroll-2.3.0.tgz",
    "hash": "3af06fe2f7130500704b676cdef94452c08fe593",
    "integrity": "sha512-UqVimLeAe+5EHXKfsca081hAkzg3WuDmoT9cayjBegd6UZVhlTEchleNp9J4TMGkb/ftLve7ARB5Wph+HJ7A5g==",
    "registry": "npm",
    "packageName": "react-remove-scroll",
    "cacheIntegrity": "sha512-UqVimLeAe+5EHXKfsca081hAkzg3WuDmoT9cayjBegd6UZVhlTEchleNp9J4TMGkb/ftLve7ARB5Wph+HJ7A5g== sha1-OvBv4vcTBQBwS2ds3vlEUsCP5ZM="
  },
  "registry": "npm",
  "hash": "3af06fe2f7130500704b676cdef94452c08fe593"
}