{
  "manifest": {
    "name": "gatsby-plugin-purgecss",
    "description": "Gatsby plugin for purgecss. Removes unused css/sass/less/stylus from files and modules. Supports Tailwindcss, Bootstrap, Bulma etc.",
    "version": "5.0.0",
    "main": "index.js",
    "license": "MIT",
    "author": {
      "name": "Ananto Ghosh"
    },
    "devDependencies": {
      "@babel/cli": "7.8.4",
      "@babel/core": "7.9.0",
      "@babel/plugin-transform-modules-commonjs": "7.9.0",
      "@babel/preset-env": "7.9.0",
      "@release-it/conventional-changelog": "1.1.0",
      "coveralls": "3.0.11",
      "dotenv": "8.2.0",
      "gatsby": "2.20.2",
      "gatsby-plugin-less": "3.1.0",
      "gatsby-plugin-postcss": "2.2.0",
      "gatsby-plugin-sass": "2.2.0",
      "gatsby-plugin-stylus": "2.2.0",
      "jest": "25.1.0",
      "less": "3.11.1",
      "react": "16.13.1",
      "react-dom": "16.13.1",
      "release-it": "13.1.2",
      "runjs": "4.4.2",
      "sass": "1.26.3",
      "symlink-dir": "3.1.2",
      "tailwindcss": "1.2.0"
    },
    "dependencies": {
      "fs-extra": "^9.0.0",
      "purgecss": "^2.1.0",
      "loader-utils": "^2.0.0"
    },
    "peerDependencies": {
      "gatsby": ">2.0.0-beta"
    },
    "scripts": {
      "build": "babel src --out-dir .",
      "test": "run test",
      "test:unit": "jest unit",
      "test:build": "jest build",
      "jest": "jest",
      "release": "git branch -v && node -r dotenv/config node_modules/release-it/bin/release-it.js",
      "runjs": "run"
    },
    "files": [
      "index.js",
      "gatsby-node.js",
      "loader.js",
      "utils.js",
      "paths.js",
      "shared.js"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/anantoghosh/gatsby-plugin-purgecss.git"
    },
    "bugs": {
      "url": "https://github.com/anantoghosh/gatsby-plugin-purgecss/issues"
    },
    "homepage": "https://github.com/anantoghosh/gatsby-plugin-purgecss#readme",
    "keywords": [
      "gatsby",
      "gatsby-plugin",
      "css",
      "sass",
      "scss",
      "stylus",
      "less",
      "optimize",
      "clean",
      "purgecss",
      "purify",
      "purifycss"
    ],
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-gatsby-plugin-purgecss-5.0.0-ff94f815e908ca568cb8c2f6803d467f4f72b806-integrity/node_modules/gatsby-plugin-purgecss/package.json",
    "readmeFilename": "README.md",
    "readme": "# Gatsby Plugin Purgecss [![npm version](https://badge.fury.io/js/gatsby-plugin-purgecss.svg)](https://www.npmjs.com/package/gatsby-plugin-purgecss) [![npm downloads](https://img.shields.io/npm/dt/gatsby-plugin-purgecss.svg)](https://www.npmjs.com/package/gatsby-plugin-purgecss)\n\nFor Gatsby 2 only\n\n[![CircleCI](https://circleci.com/gh/anantoghosh/gatsby-plugin-purgecss/tree/master.svg?style=svg)](https://circleci.com/gh/anantoghosh/gatsby-plugin-purgecss/tree/master)\n[![Build Status](https://travis-ci.org/anantoghosh/gatsby-plugin-purgecss.svg?branch=master)](https://travis-ci.org/anantoghosh/gatsby-plugin-purgecss)\n[![Coverage Status](https://coveralls.io/repos/github/anantoghosh/gatsby-plugin-purgecss/badge.svg?branch=master)](https://coveralls.io/github/anantoghosh/gatsby-plugin-purgecss?branch=master)\n[![Renovate badge](https://camo.githubusercontent.com/d89df1f233d795498824e8739f439d2172d7ff12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656e6f766174652d656e61626c65642d627269676874677265656e2e737667)](https://renovatebot.com/) [![Known Vulnerabilities](https://snyk.io/test/github/anantoghosh/gatsby-plugin-purgecss/badge.svg?targetFile=package.json)](https://snyk.io/test/github/anantoghosh/gatsby-plugin-purgecss?targetFile=package.json)\n[![tested with jest](https://anantoghosh.github.io/stop-watch/jest_op.svg)](https://github.com/facebook/jest)\n\n[![dependencies](https://david-dm.org/anantoghosh/gatsby-plugin-purgecss.svg)](https://david-dm.org/anantoghosh/gatsby-plugin-purgecss/)\n[![dev dependencies](https://david-dm.org/anantoghosh/gatsby-plugin-purgecss/dev-status.svg)](https://david-dm.org/anantoghosh/gatsby-plugin-purgecss?type=dev)\n[![peer dependencies](https://david-dm.org/anantoghosh/gatsby-plugin-purgecss/peer-status.svg)](https://david-dm.org/anantoghosh/gatsby-plugin-purgecss?type=peer)\n\n## What is this plugin about?\n\n**Remove unused css from css/sass/less/stylus files and modules in your Gatsby project using [purgecss](https://github.com/FullHuman/purgecss). üéâ. Supports tailwind, bootstrap, bulma etc.**  \n\n<hr />\n\n‚ö†Ô∏è NOTE: This is NOT an install and forget type plugin. By default, it may remove required styles too.  \n \n**Please read [Help! Purgecss breaks my site](#help-purgecss-breaks-my-site) üòØ to make sure gatsby-plugin-purgecss does not cause you issues and [TLDR](#TLDR) for the important bits**\n\n<hr />\n\nüìò [Read the latest docs here.](https://github.com/anantoghosh/gatsby-plugin-purgecss/blob/master/README.md) ‚Ä¢ [Changelog](https://github.com/anantoghosh/gatsby-plugin-purgecss/blob/master/CHANGELOG.md) ‚Ä¢ \n\n### Demo\nWhen used in [gatsby-starter-bootstrap](https://github.com/jaxx2104/gatsby-starter-bootstrap)\n\n![demo](https://anantoghosh.github.io/files/gatsby-starter-bootstrap.png)\n\nWhen used in [gatsby-starter-bootstrap-cv](https://github.com/mhjadav/gatsby-starter-bootstrap-cv) (installed by default)\n\n![demo](https://anantoghosh.github.io/files/gatsby-starter-bootstrap-cv.png)\n## Supported files\n\n- `.css` , `.module.css`\n- `.scss`, `.sass`, `.module.scss`, `.module.sass` (via [gatsby-plugin-sass](https://next.gatsbyjs.org/packages/gatsby-plugin-sass/))\n- `.less`, `.module.less` (via [gatsby-plugin-less](https://next.gatsbyjs.org/packages/gatsby-plugin-less/))\n- `.styl`, `.module.styl` (via [gatsby-plugin-stylus](https://next.gatsbyjs.org/packages/gatsby-plugin-sass/))\n\n## Installation\n\n```sh\nnpm i gatsby-plugin-purgecss\n```\n\n### Usage\n\n> **Add the plugin AFTER other css/postcss plugins**\n\n```js\n// gatsy-config.js\nmodule.exports = {\n  plugins: [\n    `gatsby-plugin-stylus`,\n    `gatsby-plugin-sass`,\n    `gatsby-plugin-less`,\n    `gatsby-plugin-postcss`,\n    // Add after these plugins if used\n    { \n      resolve: `gatsby-plugin-purgecss`,\n      options: {\n        printRejected: true, // Print removed selectors and processed file names\n        // develop: true, // Enable while using `gatsby develop`\n        // tailwind: true, // Enable tailwindcss support\n        // whitelist: ['whitelist'], // Don't remove this selector\n        // ignore: ['/ignored.css', 'prismjs/', 'docsearch.js/'], // Ignore files/folders\n        // purgeOnly : ['components/', '/main.css', 'bootstrap/'], // Purge only these files/folders\n      }\n    }\n  ]\n};\n```\n[Read about all the available options.](#options)\n## TLDR\n* Define options in `gatsby-config.js`, not `purgecss.config.js`.\n* If using tailwindcss, use the [`tailwind: true` option](#tailwind).\n* Use [`printRejected: true`](#printrejected) option to print the removed selectors.\n* Only files processed by Webpack will be purged.\n* `my-selector` will not match `mySelector`.\n* Whitelist required selectors or ignore files/folder using the [Whitelist Solutions](#whitelist-solutions) guide.\n* Ignore complete packages with [`ignore: ['packagename/']`](#ignore).\n* To only purge specific files/packages use [`purgeOnly: ['fileOrPackage/']`](#purgeOnly).\n* Only `js, jsx, ts, tsx` files are scanned for selectors by default. If you want to add `md` or `mdx` use `content: [path.join(process.cwd(), 'src/**/!(*.d).{ts,js,jsx,tsx,md,mdx}')]` or better, just whitelist the required selectors.\n\n## Help! Purgecss breaks my site\n\n### Diagnosing the issue\n* Use [`printRejected: true` option](#printrejected) which will print the filenames and the selectors which were removed.\n* Identify which of the required selectors were removed.\n* Whitelist the required selectors or completely ignore files using [Whitelist Solutions](#whitelist-solutions) guide.\n* Look at the [Issues](#issues) section to understand why/how the purge was performed.\n\n### Issues\n\nThis section documents purgecss behavior in removing unused css. Most of the rules apply in any project and is not `gatsby-plugin-purgecss` specific.\n\n#### Issue 1: CSS file not getting purged\nFor `gatsby-plugin-purgecss` to work on a css file it **must be imported by a script file inside your src folder**. This plugin depends on webpack to process css. **If webpack does not use the css file then `gatsby-plugin-purgecss` cannot process it.**\n\nAlso, make sure that you [included the plugin](#usage) after sass/less/stylus/postcss plugins. \n\n#### Issue 2: Selectors with dashes in name gets removed when used with named imports\nFor eg:\n**style.css**\n```css\n.my-selector { color: 'white' }\n```\n**index.js**\n```jsx\n// Named import\nimport style from './style.css';\n...\n<div className={style.mySelector} /> ‚ùå\n```\nHere `.my-selector` **will get removed** since purgecss by default cannot match it with `mySelector`.\n\n**Read how to solve this issue in the [\"Whitelist Solutions\"](#whitelist-solutions) section.**\n\n*Note: Directly importing and using the selector name as is will work as intended*\n```jsx\nimport './style.css';\n<div className={`my-selector`} /> ‚úÖ\n```\n#### Issue 3: Styles getting purged even though the script file has selector names\nMake sure that the script file is in the `src` folder.  \nIf you want to look for selectors in another folder, use the [`content` option.](#content---from-purgecss)\n\n#### Issue 4: Getting \"Could not parse file, skipping. Your build will not break.\"\n> If you use postcss syntax based plugins then read [this](#using-with-postcss-syntax-plugins).\n\nSomething is wrong. Good news is `gatsby-plugin-purgecss` should not cause any issue in such cases, files which could not be parsed will be skipped. If you want to diagnose the problem then use the [`debug` option](#debug). Also, feel free to create a GitHub issue.\n\n#### Issue 5: Using npm packages with components which import css files\nIf you import a npm package which imports its own styles locally, then gatsby-plugin-purgecss will incorrectly remove all the css imported by the package. It's because by default the selectors are only matched with the files under 'src' folder.  \nTo get around this, you could:\n1. Ignore the file completely using the [`ignore` option](#ignore)\n2. Whitelist the required selectors as described in the next section.\n3. Use the [`content` option](#content---from-purgecss) and add the package's path.\nEg:\n```js\ncontent: [\n  path.join(process.cwd(), 'src/**/!(*.d).{ts,js,jsx,tsx}'),\n  path.join(process.cwd(), 'node_modules/my-npm-package/folder-to-match/!(*.d).{ts,js,jsx,tsx}')\n];\n```\n\n#### Issue 6: Works in `develop`, breaks in `build`\n`gatsby-plugin-purgecss` by default does not run when using `gatsby develop`.\n\n#### Issue 7: Selectors in markdown (.md, .mdx) files are getting removed\nMarkdown files are not scanned for selectors by default.\nUse the [`content` option.](#content---from-purgecss) to add them.\n```js\ncontent: [path.join(process.cwd(), 'src/**/!(*.d).{ts,js,jsx,tsx,md,mdx}')]\n```\nNote: This may decrease the amount of styles removed because purgecss will consider every word in the markdown file to be a selector.  \nIf possible, just whitelist the required selectors instead of using this option.\n\n### Whitelist Solutions\nYou can use any of these techniques to stop purgecss from removing required styles\n#### 1. Whitelist the selector using the whitelist option in gatsby-config.js\n```js\nwhitelist: ['my-selector']\n```\n[Read about whitelist option.](#whitelist---from-purgecss)\n\n#### 2. Use a JavaScript comment\n```jsx\n// my-selector\n<div className={style.mySelector} />\n```\nThis comment can be in any script file inside `src`.\n\n#### 3.  Use Regex pattern to exclude many selectors\n`whitelistPatterns` option is available from purgecss\n```js\nwhitelistPatterns: [/^btn/]\n```\nFor eg, this pattern will whitelist all selectors starting with btn: btn btn-primary btn-secondary etc.  \n[Read about whitelistPatterns option.](#whitelistpatterns---from-purgecss)  \nLook at the [`whitelistPatternsChildren` option](#whitelist---from-purgecss) in purgecss to also whitelist children of the selectors.\n\n#### 4. Use purgecss ignore comment in css file\n```css\n/* purgecss ignore */\n.my-selector { color: 'white' }\n```\nThis comment will ignore the selector on the next line.\n\n#### 5. Use purgecss ignore block comments in css file\n```css\n/* purgecss start ignore */\nbutton { color: 'white' };\n.yo { color: 'blue' };\n/* purgecss end ignore */\n```\nThis comment pair will ignore all css selectors between them.\n\n#### 6. Ignore files and folder using the ignore options\n```js\nignore: ['ignoredFile.css', 'ignoredFolder/', 'sub/folder/ignore/', 'inFolder/file.css']\n```\n**Note:** always use forward slash `/` for folders, even on Windows.  \n[Read about ignore option.](#ignore)\n\n#### 7. Purge only specified files and skip everything else\n```js\npurgeOnly: ['/mainstyles.css', 'node_modules/bootstrap']\n```\n**Note:** always use forward slash `/` for folders, even on Windows.  \nGood if you only need to purge some large css library and not touch anything else.  \n[Read about purgeOnly option.](#purgeOnly)\n\n#### 8. For selector with dashes in them and using named imports\nYou *could* write it like `className={style['my-selector']}` instead.\n\n### Improving Purgecss selector detection\nPurgecss relies on extractors to get the list of selector used in a file. The default extractor considers every word of a file as a selector.\nYou could use your own extractor (or get one made by other community members) to improve detection and further decrease your css file size.\n[Read more at Purgecss docs.](https://www.purgecss.com/extractors)\n\nIf you do find/write a better extractor suited for Gatsby, please help me add it to the docs. \n\n## Important Notes\n\n### Running\n\nBy default, this plugin only runs when building the project (`gatsby build`).  \nIt will print the amount of css removed.\nTo run it while using `gatsby develop`, use the `develop: true` option.\n\n### Size reporting\nThe size reported by this plugin is the approximate size of the css content *before* any optimizations have been performed.  \nThe actual file size should be smaller.\n\n### Selector matching\n\nThis plugin loads css files (or transformed output from css plugins) and searches for matching selectors in js, jsx, ts, tsx files in `src/`. It does not know which css file belongs to which source file. Therefore, for eg., if there is a class `.module` in some css file, it will not be removed if it used in _any_ script file under `src/`.\n\n### Whitelist ['html', 'body']\n\nSince html and body tags do not appear in `src/` files, it is whitelisted by default to not be removed.  \nSince v2.3.0, manually including 'html', 'body' is no longer required.\n\n### Webpack loader order\nSass/Less/Stylus(or any other loader) -> PostCSS -> **PurgeCSS** -> CSSLoader -> (CSSExtract/StyleLoader)  \nNote: Sass/Less/Stylus `@import`s are executed before this plugin, therefore, it won't see the `@import`ed files as separate files.\n\n### Using with postcss syntax plugins\nSince v3, `gatsby-plugin-purgecss` should work with other postcss plugins.\nFor older versions:  \n`gatsby-plugin-purgecss` is executed before postcss loader and can only purge css syntax. If you are using any syntax based postcss plugin, then it may not get purged. In such cases you will see \"Could not parse file, skipping. Your build will not break.\" message. `gatsby-plugin-purgecss` will simply ignore the file and continue without issue.\nIt would be better if you use purgecss postcss plugin directly instead.\n\n## Options\n\nThis plugin supports most purgecss options as is (except `css`).\n> [Read about purgecss options in detail](https://www.purgecss.com/configuration)\n\nOptions can be specified in your `gatsby-config.js` file like so:\n```js\nmodule.exports = {\n  plugins: [\n    {\n      resolve: 'gatsby-plugin-purgecss',\n      options: {\n        printRejected: true,\n      }\n    }\n  ]\n};\n```\n\n### rejected\nPrint the amount of css removed  \n**`rejected: boolean`**\n```js\nrejected: true\n```\ndefault: `true`\n\n### printRejected\nPrint the list of removed selectors  \n**`printRejected: boolean`**\n```js\nprintRejected: true\n```\nNeeds [`rejected`](#rejected) option to be true.  \nIt will print maximum of 100 removed selector per file to keep the output readable.  \nTo view all the removed selector enable the [`printAll` option](#printall).  \ndefault: `false`\n\n### printAll\nEnables `printRejected` to print all the rejected selectors.  \n(Output can get messy)  \n**`printAll: boolean`**\n```js\nprintAll: true\n```\nNeeds [`printRejected`](#printrejected) option to be true.  \ndefault: `false`\n\n### whitelist - from purgecss\nStops from removing these selectors.  \n**`whitelist: Array<string>`**\n```js\nwhitelist: ['my-selector', 'footer']\n```\n**Note:** do NOT add `.` or `#` for classes and ids.  \n`'html'`, `'body'` are always whitelisted.  \nSince v2.3.0 manually including 'html', 'body' is no longer required.  \ndefault: `[]`\n\n### purgeOnly\nOnly purge these files/folders.  \nAdded in v3.1.0.  \n**`ignore: Array<string>`**\n```js\npurgeOnly: ['/main.css', 'bootstrap/', 'node_modules/font-awesome/']\n```\n**Note:** always use forward slash `/` for folders, even on Windows.  \nCan be combined with the [`ignore` option](#ignore).  \ndefault: `[]`\n\n### ignore\nStop these files or folders from getting purged.  \n**`ignore: Array<string>`**\n```js\nignore: ['/ignoredFile.css', 'ignoredFolder/', 'sub/folder/ignore/', 'inFolder/file.css']\n```\n**Note:** always use forward slash `/` for folders, even on Windows.  \ndefault: `[]`\n\n### tailwind\nEnable Tailwind support.  \nAdded in v3.  \n**`tailwind: boolean`**\n```js\ntailwind: true\n```\nUses extractors needed for parsing tailwind class names.  \nEnable if you are using tailwindcss.  \ndefault: `false`\n\n### develop\nEnable plugin while using `gatsby develop`.  \nAdded in v3.  \n**`develop: boolean`**\n```js\ndevelop: true\n```\nThis does not print the total css removed.  \nTo see what is being removed, use it with the [printRejected option](#printRejected).  \ndefault: `false`\n\n### debug\nEnable debugging  \n**`debug: boolean`**\n```js\ndebug: true\n```\nIt will write two files to disk.  \n`gatsby-plugin-purgecss-debug-config.js` with Gatsby's webpack config.  \n`gatsby-plugin-purgecss-debug.js` with the errors encountered.  \ndefault: `false`\n\n### content - from purgecss\nFiles to search for selectors.  \n**`content: Array<string>`**\n```js\ncontent: [\n  path.join(process.cwd(), 'src/**/!(*.d).{ts,js,jsx,tsx}'),\n  path.join(process.cwd(), 'anotherFolder/!(*.d).{ts,js,jsx,tsx}')\n];\n```\ndefault: `[path.join(process.cwd(), 'src/**/!(*.d).{ts,js,jsx,tsx}')]`\n\n### whitelistPatterns - from purgecss\nWhitelist Selectors with Regular Expression  \n**`whitelistPatterns: Array<RegExp>`**\n```js\nwhitelistPatterns: [/button/, /^fa-/, /main$/]\n```\nThis example will whitelist selectors containing \"button\", starting with \"fa-\" and ending with \"main\".  \ndefault: `[]`\n\n### whitelistPatternsChildren - from purgecss\nContrary to `whitelistPatterns`, it will also whitelist children of the selectors.  \n**`whitelistPatternsChildren: Array<RegExp>`**\n```js\nwhitelistPatternsChildren: [/red$/]\n```\nIn the example, selectors such as `red p` or `.bg-red .child-of-bg` will be left in the final CSS.  \ndefault: `[]`\n\n### Other options from purgecss\n[Read About other purgecss options.](https://www.purgecss.com/configuration)  \n**`extractors?: Array<ExtractorsObj>`**  \n**`keyframes?: boolean`**  \n**`fontFace?: boolean`**  \n\n## Versioning\n\ngatsby-plugin-purgecss uses [SemVer](http://semver.org/) for versioning.\n\n## Acknowledgment\n\nThis project was made possible due to the incredible work done on the following projects:\n\n- [purgecss](https://github.com/FullHuman/purgecss)\n- [purgecss-loader](https://github.com/americanexpress/purgecss-loader)\n- [gatsby](https://github.com/gatsbyjs/gatsby/)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Ananto Ghosh\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gatsby-plugin-purgecss/-/gatsby-plugin-purgecss-5.0.0.tgz#ff94f815e908ca568cb8c2f6803d467f4f72b806",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gatsby-plugin-purgecss/-/gatsby-plugin-purgecss-5.0.0.tgz",
    "hash": "ff94f815e908ca568cb8c2f6803d467f4f72b806",
    "integrity": "sha512-vzBQSBfZuzmm6+P5qedw+LCgtQm0HRzdDUjytdCwgYCBRuxUjxSkHAFBpemSXqkklfWxs6jcLjRuElVqSDLT1w==",
    "registry": "npm",
    "packageName": "gatsby-plugin-purgecss",
    "cacheIntegrity": "sha512-vzBQSBfZuzmm6+P5qedw+LCgtQm0HRzdDUjytdCwgYCBRuxUjxSkHAFBpemSXqkklfWxs6jcLjRuElVqSDLT1w== sha1-/5T4FekIylaMuML2gD1Gf09yuAY="
  },
  "registry": "npm",
  "hash": "ff94f815e908ca568cb8c2f6803d467f4f72b806"
}