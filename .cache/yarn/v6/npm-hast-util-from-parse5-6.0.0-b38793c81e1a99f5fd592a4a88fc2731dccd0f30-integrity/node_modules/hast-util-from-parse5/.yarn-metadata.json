{
  "manifest": {
    "name": "hast-util-from-parse5",
    "version": "6.0.0",
    "description": "hast utility to transform from Parse5’s AST",
    "license": "MIT",
    "keywords": [
      "unist",
      "hast",
      "hast-util",
      "util",
      "utility",
      "transform",
      "change",
      "ast"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/hast-util-from-parse5.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hast-util-from-parse5/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "files": [
      "index.js",
      "types/index.d.ts"
    ],
    "types": "types/index.d.ts",
    "dependencies": {
      "@types/parse5": "^5.0.0",
      "ccount": "^1.0.0",
      "hastscript": "^5.0.0",
      "property-information": "^5.0.0",
      "vfile": "^4.0.0",
      "web-namespaces": "^1.0.0"
    },
    "devDependencies": {
      "browserify": "^16.0.0",
      "dtslint": "^3.0.0",
      "is-hidden": "^1.0.0",
      "not": "^0.1.0",
      "nyc": "^15.0.0",
      "parse5": "^6.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^8.0.0",
      "remark-preset-wooorm": "^7.0.0",
      "tape": "^5.0.0",
      "tinyify": "^2.0.0",
      "to-vfile": "^6.0.0",
      "unist-util-visit": "^2.0.0",
      "xo": "^0.30.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write . && xo --fix",
      "build-bundle": "browserify index.js -s hastUtilFromParse5 > hast-util-from-parse5.js",
      "build-mangle": "browserify index.js -p tinyify -s hastUtilFromParse5 > hast-util-from-parse5.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test",
      "test-types": "dtslint types",
      "test": "npm run format && npm run build && npm run test-coverage && npm run test-types"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "unicorn/no-fn-reference-in-iterator": "off",
        "guard-for-in": "off"
      },
      "ignores": [
        "hast-util-from-parse5.js",
        "**/*.ts"
      ]
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-hast-util-from-parse5-6.0.0-b38793c81e1a99f5fd592a4a88fc2731dccd0f30-integrity/node_modules/hast-util-from-parse5/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hast-util-from-parse5\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**hast**][hast] utility to transform [Parse5’s AST][ast] to a hast\n[*tree*][tree].\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install hast-util-from-parse5\n```\n\n## Use\n\nSay we have the following file, `example.html`:\n\n```html\n<!doctype html><title>Hello!</title><h1 id=\"world\">World!<!--after-->\n```\n\nAnd our script, `example.js`, looks as follows:\n\n```js\nvar vfile = require('to-vfile')\nvar parse5 = require('parse5')\nvar inspect = require('unist-util-inspect')\nvar fromParse5 = require('hast-util-from-parse5')\n\nvar doc = vfile.readSync('example.html')\nvar ast = parse5.parse(String(doc), {sourceCodeLocationInfo: true})\nvar hast = fromParse5(ast, doc)\n\nconsole.log(inspect(hast))\n```\n\nNow, running `node example` yields:\n\n```text\nroot[2] (1:1-2:1, 0-70) [data={\"quirksMode\":false}]\n├─ doctype (1:1-1:16, 0-15) [name=\"html\"]\n└─ element[2] [tagName=\"html\"]\n   ├─ element[1] [tagName=\"head\"]\n   │  └─ element[1] (1:16-1:37, 15-36) [tagName=\"title\"]\n   │     └─ text: \"Hello!\" (1:23-1:29, 22-28)\n   └─ element[1] [tagName=\"body\"]\n      └─ element[3] (1:37-2:1, 36-70) [tagName=\"h1\"][properties={\"id\":\"world\"}]\n         ├─ text: \"World!\" (1:52-1:58, 51-57)\n         ├─ comment: \"after\" (1:58-1:70, 57-69)\n         └─ text: \"\\n\" (1:70-2:1, 69-70)\n```\n\n## API\n\n### `fromParse5(ast[, options])`\n\nTransform [Parse5’s AST][ast] to a [**hast**][hast] [*tree*][tree].\n\n##### `options`\n\nIf `options` is a [`VFile`][vfile], it’s treated as `{file: options}`.\n\n###### `options.space`\n\nWhether the [*root*][root] of the [*tree*][tree] is in the `'html'` or `'svg'`\nspace (enum, `'svg'` or `'html'`, default: `'html'`).\n\nIf an element in with the SVG namespace is found in `ast`, `fromParse5`\nautomatically switches to the SVG space when entering the element, and switches\nback when leaving.\n\n###### `options.file`\n\n[`VFile`][vfile], used to add [positional information][positional-information]\nto [*nodes*][node].\nIf given, the [*file*][file] should have the original HTML source as its\ncontents.\n\n###### `options.verbose`\n\nWhether to add extra positional information about starting tags, closing tags,\nand attributes to elements (`boolean`, default: `false`).\nNote: not used without `file`.\n\nFor the following HTML:\n\n```html\n<img src=\"http://example.com/fav.ico\" alt=\"foo\" title=\"bar\">\n```\n\nThe verbose info would looks as follows:\n\n```js\n{\n  type: 'element',\n  tagName: 'img',\n  properties: {src: 'http://example.com/fav.ico', alt: 'foo', title: 'bar'},\n  children: [],\n  data: {\n    position: {\n      opening: {\n        start: {line: 1, column: 1, offset: 0},\n        end: {line: 1, column: 61, offset: 60}\n      },\n      closing: null,\n      properties: {\n        src: {\n          start: {line: 1, column: 6, offset: 5},\n          end: {line: 1, column: 38, offset: 37}\n        },\n        alt: {\n          start: {line: 1, column: 39, offset: 38},\n          end: {line: 1, column: 48, offset: 47}\n        },\n        title: {\n          start: {line: 1, column: 49, offset: 48},\n          end: {line: 1, column: 60, offset: 59}\n        }\n      }\n    }\n  },\n  position: {\n    start: {line: 1, column: 1, offset: 0},\n    end: {line: 1, column: 61, offset: 60}\n  }\n}\n```\n\n## Security\n\nUse of `hast-util-from-parse5` can open you up to a\n[cross-site scripting (XSS)][xss] attack if Parse5’s AST is unsafe.\n\n## Related\n\n*   [`hast-util-to-parse5`](https://github.com/syntax-tree/hast-util-to-parse5)\n    — transform hast to Parse5’s AST\n*   [`hast-util-to-nlcst`](https://github.com/syntax-tree/hast-util-to-nlcst)\n    — transform hast to nlcst\n*   [`hast-util-to-mdast`](https://github.com/syntax-tree/hast-util-to-mdast)\n    — transform hast to mdast\n*   [`hast-util-to-xast`](https://github.com/syntax-tree/hast-util-to-xast)\n    — transform hast to xast\n*   [`mdast-util-to-hast`](https://github.com/syntax-tree/mdast-util-to-hast)\n    — transform mdast to hast\n*   [`mdast-util-to-nlcst`](https://github.com/syntax-tree/mdast-util-to-nlcst)\n    — transform mdast to nlcst\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/hast-util-from-parse5.svg\n\n[build]: https://travis-ci.org/syntax-tree/hast-util-from-parse5\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-from-parse5.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/hast-util-from-parse5\n\n[downloads-badge]: https://img.shields.io/npm/dm/hast-util-from-parse5.svg\n\n[downloads]: https://www.npmjs.com/package/hast-util-from-parse5\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/hast-util-from-parse5.svg\n\n[size]: https://bundlephobia.com/result?p=hast-util-from-parse5\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/syntax-tree\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/master/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/master/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/master/code-of-conduct.md\n\n[ast]: https://github.com/inikulin/parse5/blob/master/packages/parse5/docs/tree-adapter/default/interface-list.md\n\n[vfile]: https://github.com/vfile/vfile\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[root]: https://github.com/syntax-tree/unist#root\n\n[positional-information]: https://github.com/syntax-tree/unist#positional-information\n\n[file]: https://github.com/syntax-tree/unist#file\n\n[hast]: https://github.com/syntax-tree/hast\n\n[node]: https://github.com/syntax-tree/hast#nodes\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hast-util-from-parse5/-/hast-util-from-parse5-6.0.0.tgz#b38793c81e1a99f5fd592a4a88fc2731dccd0f30",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hast-util-from-parse5/-/hast-util-from-parse5-6.0.0.tgz",
    "hash": "b38793c81e1a99f5fd592a4a88fc2731dccd0f30",
    "integrity": "sha512-3ZYnfKenbbkhhNdmOQqgH10vnvPivTdsOJCri+APn0Kty+nRkDHArnaX9Hiaf8H+Ig+vkNptL+SRY/6RwWJk1Q==",
    "registry": "npm",
    "packageName": "hast-util-from-parse5",
    "cacheIntegrity": "sha512-3ZYnfKenbbkhhNdmOQqgH10vnvPivTdsOJCri+APn0Kty+nRkDHArnaX9Hiaf8H+Ig+vkNptL+SRY/6RwWJk1Q== sha1-s4eTyB4amfX9WSpKiPwnMdzNDzA="
  },
  "registry": "npm",
  "hash": "b38793c81e1a99f5fd592a4a88fc2731dccd0f30"
}