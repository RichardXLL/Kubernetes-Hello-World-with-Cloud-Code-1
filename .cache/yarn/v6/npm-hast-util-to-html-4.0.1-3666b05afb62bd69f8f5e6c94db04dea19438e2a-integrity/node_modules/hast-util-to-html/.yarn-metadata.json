{
  "manifest": {
    "name": "hast-util-to-html",
    "version": "4.0.1",
    "description": "Transform HAST to HTML",
    "license": "MIT",
    "keywords": [
      "hast",
      "util",
      "html"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/hast-util-to-html.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hast-util-to-html/issues"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "http://wooorm.com"
      }
    ],
    "files": [
      "lib",
      "index.js"
    ],
    "dependencies": {
      "ccount": "^1.0.0",
      "comma-separated-tokens": "^1.0.1",
      "hast-util-is-element": "^1.0.0",
      "hast-util-whitespace": "^1.0.0",
      "html-void-elements": "^1.0.0",
      "property-information": "^4.0.0",
      "space-separated-tokens": "^1.0.0",
      "stringify-entities": "^1.0.1",
      "unist-util-is": "^2.0.0",
      "xtend": "^4.0.1"
    },
    "devDependencies": {
      "browserify": "^16.0.0",
      "hastscript": "^4.0.0",
      "nyc": "^12.0.0",
      "prettier": "^1.13.5",
      "remark-cli": "^5.0.0",
      "remark-preset-wooorm": "^4.0.0",
      "tape": "^4.0.0",
      "tinyify": "^2.4.3",
      "unist-builder": "^1.0.1",
      "xo": "^0.21.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
      "build-bundle": "browserify index.js -s hastUtilToHTML > hast-util-to-html.js",
      "build-mangle": "browserify index.js -p tinyify -s hastUtilToHTML > hast-util-to-html.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test",
      "test": "npm run format && npm run build && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "guard-for-in": "off",
        "eqeqeq": "off",
        "no-eq-null": "off"
      },
      "ignores": [
        "hast-util-to-html.js"
      ]
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-hast-util-to-html-4.0.1-3666b05afb62bd69f8f5e6c94db04dea19438e2a-integrity/node_modules/hast-util-to-html/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hast-util-to-html [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nTransform [HAST][] to HTML.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install hast-util-to-html\n```\n\n## Usage\n\n```javascript\nvar h = require('hastscript')\nvar toHTML = require('hast-util-to-html')\n\nvar tree = h('.alpha', [\n  'bravo ',\n  h('b', 'charlie'),\n  ' delta ',\n  h('a.echo', {download: true}, 'foxtrot')\n])\n\nconsole.log(toHTML(tree))\n```\n\nYields:\n\n```html\n<div class=\"alpha\">bravo <b>charlie</b> delta <a class=\"echo\" download>foxtrot</a></div>\n```\n\n## API\n\n### `toHTML(tree[, options])`\n\nStringify the given [HAST tree][hast].\n\n###### `options.space`\n\nWhether the root of the given tree is in the `'html'` or `'svg'` space (enum,\n`'svg'` or `'html'`, default: `'html'`).\n\nIf an `svg` element is found in the HTML space, `toHTML` automatically switches\nto the SVG space when entering the element, and switches back when leaving.\n\n###### `options.entities`\n\nConfiguration for [`stringify-entities`][stringify-entities]\n(`Object`, default: `{}`).  Do not use `escapeOnly`, `attribute`, or\n`subset` (`toHTML` already passes those).  However, `useNamedReferences`,\n`useShortestReferences`, and `omitOptionalSemicolons` are all fine.\n\n###### `options.voids`\n\nTag-names of elements to stringify without closing tag (`Array.<string>`,\ndefault: [`html-void-elements`][html-void-elements]).\n\nNot used in the SVG space.\n\n###### `options.quote`\n\nPreferred quote to use (`'\"'` or `'\\''`, default: `'\"'`).\n\n###### `options.quoteSmart`\n\nUse the other quote if that results in less bytes (`boolean`, default:\n`false`).\n\n###### `options.preferUnquoted`\n\nLeave attributes unquoted if that results in less bytes (`boolean`,\ndefault: `false`).\n\nNot used in the SVG space.\n\n###### `options.omitOptionalTags`\n\nOmit optional opening and closing tags (`boolean`, default: `false`).\nFor example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>`\nclosing tags can be omitted.  The first because it’s followed by\nanother `li`, the last because it’s followed by nothing.\n\nNot used in the SVG space.\n\n###### `options.collapseEmptyAttributes`\n\nCollapse empty attributes: `class=\"\"` is stringified as `class` instead\n(`boolean`, default: `false`).  **Note**: boolean attributes, such as\n`hidden`, are always collapsed.\n\nNot used in the SVG space.\n\n###### `options.closeSelfClosing`\n\nClose self-closing nodes with an extra slash (`/`): `<img />` instead of\n`<img>` (`boolean`, default: `false`).\n\nNot used in the SVG space.\n\n###### `options.closeEmptyElements`\n\nClose SVG elements without any content with slash (`/`) on the opening tag\ninstead of an end tag: `<circle />` instead of `<circle></circle>` (`boolean`,\ndefault: `false`).\n\nNot used in the HTML space.\n\n###### `options.tightSelfClosing`\n\nDo not use an extra space when closing self-closing elements: `<img/>`\ninstead of `<img />` (`boolean`, default: `false`).  **Note**: Only used\nif `closeSelfClosing: true` or `closeEmptyElements: true`.\n\n###### `options.tightCommaSeparatedLists`\n\nJoin known comma-separated attribute values with just a comma (`,`),\ninstead of padding them on the right as well (`,·`, where `·` represents a\nspace) (`boolean`, default: `false`).\n\n###### `options.tightAttributes`\n\nJoin attributes together, without white-space, if possible:\n`class=\"a b\" title=\"c d\"` is stringified as `class=\"a b\"title=\"c d\"`\ninstead to save bytes (`boolean`, default: `false`).  **Note**: creates\ninvalid (but working) markup.\n\nNot used in the SVG space.\n\n###### `options.tightDoctype`\n\nDrop unneeded spaces in doctypes: `<!doctypehtml>` instead of `<!doctype html>`\nto save bytes (`boolean`, default: `false`).  **Note**: creates\ninvalid (but working) markup.\n\n###### `options.allowParseErrors`\n\nDo not encode characters which trigger parse errors (even though they\nwork), to save bytes (`boolean`, default: `false`).  **Note**: creates\ninvalid (but working) markup.\n\nNot used in the SVG space.\n\n###### `options.allowDangerousCharacters`\n\nDo not encode some characters which cause XSS vulnerabilities in older\nbrowsers (`boolean`, default: `false`).  **Note**: Only set this if you\ncompletely trust the content.\n\n###### `options.allowDangerousHTML`\n\nAllow `raw` nodes and insert them as raw HTML.  When falsey, encodes\n`raw` nodes (`boolean`, default: `false`).  **Note**: Only set this if\nyou completely trust the content.\n\n## Related\n\n*   [`hast-util-sanitize`][hast-util-sanitize]\n    — Sanitize HAST nodes\n*   [`rehype-stringify`](https://github.com/wooorm/rehype/tree/master/packages/rehype-stringify)\n    — Wrapper around this project for [**rehype**](https://github.com/wooorm/rehype)\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/hast`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc].  By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/hast-util-to-html.svg\n\n[travis]: https://travis-ci.org/syntax-tree/hast-util-to-html\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-to-html.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/hast-util-to-html\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[hast]: https://github.com/syntax-tree/hast\n\n[html-void-elements]: https://github.com/wooorm/html-void-elements\n\n[stringify-entities]: https://github.com/wooorm/stringify-entities\n\n[hast-util-sanitize]: https://github.com/syntax-tree/hast-util-sanitize\n\n[contributing]: https://github.com/syntax-tree/hast/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/hast/blob/master/code-of-conduct.md\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hast-util-to-html/-/hast-util-to-html-4.0.1.tgz#3666b05afb62bd69f8f5e6c94db04dea19438e2a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hast-util-to-html/-/hast-util-to-html-4.0.1.tgz",
    "hash": "3666b05afb62bd69f8f5e6c94db04dea19438e2a",
    "integrity": "sha512-2emzwyf0xEsc4TBIPmDJmBttIw8R4SXAJiJZoiRR/s47ODYWgOqNoDbf2SJAbMbfNdFWMiCSOrI3OVnX6Qq2Mg==",
    "registry": "npm",
    "packageName": "hast-util-to-html",
    "cacheIntegrity": "sha512-2emzwyf0xEsc4TBIPmDJmBttIw8R4SXAJiJZoiRR/s47ODYWgOqNoDbf2SJAbMbfNdFWMiCSOrI3OVnX6Qq2Mg== sha1-NmawWvtivWn49ebJTbBN6hlDjio="
  },
  "registry": "npm",
  "hash": "3666b05afb62bd69f8f5e6c94db04dea19438e2a"
}