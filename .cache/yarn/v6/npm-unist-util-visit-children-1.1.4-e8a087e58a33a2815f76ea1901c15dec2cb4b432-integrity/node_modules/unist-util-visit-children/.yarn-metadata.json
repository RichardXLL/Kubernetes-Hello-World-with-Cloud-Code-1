{
  "manifest": {
    "name": "unist-util-visit-children",
    "version": "1.1.4",
    "description": "utility to visit direct children of a parent",
    "license": "MIT",
    "keywords": [
      "unist",
      "util",
      "utility",
      "visit",
      "children"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/unist-util-visit-children.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/unist-util-visit-children/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "files": [
      "index.js"
    ],
    "dependencies": {},
    "devDependencies": {
      "browserify": "^16.0.0",
      "nyc": "^15.0.0",
      "prettier": "^1.0.0",
      "remark-cli": "^7.0.0",
      "remark-preset-wooorm": "^6.0.0",
      "tape": "^4.0.0",
      "tinyify": "^2.0.0",
      "xo": "^0.25.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write \"**/*.js\" && xo --fix",
      "build-bundle": "browserify . -s unistUtilVisitChildren -o unist-util-visit-children.js",
      "build-mangle": "browserify . -s unistUtilVisitChildren -p tinyify -o unist-util-visit-children.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test": "npm run format && npm run build && npm run test-coverage"
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "guard-for-in": "off"
      },
      "ignores": [
        "unist-util-visit-children.js"
      ]
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-unist-util-visit-children-1.1.4-e8a087e58a33a2815f76ea1901c15dec2cb4b432-integrity/node_modules/unist-util-visit-children/package.json",
    "readmeFilename": "readme.md",
    "readme": "# unist-util-visit-children\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**unist**][unist] utility to visit direct children of a parent.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install unist-util-visit-children\n```\n\n## Use\n\n```js\nvar u = require('unist-builder')\nvar visitChildren = require('unist-util-visit-children')\n\nvar visit = visitChildren(function(node) {\n  console.log(node)\n})\n\nvar tree = u('tree', [\n  u('leaf', 'leaf 1'),\n  u('node', [u('leaf', 'leaf 2'), u('leaf', 'leaf 3')]),\n  u('leaf', 'leaf 4'),\n  u('void')\n])\n\nvisit(tree)\n```\n\nYields:\n\n```js\n{type: 'leaf', value: 'leaf 1'}\n{\n  type: 'node',\n  children: [\n    {type: 'leaf', value: 'leaf 2'},\n    {type: 'leaf', value: 'leaf 3'}\n  ]\n}\n{type: 'leaf', value: 'leaf 4'}\n{type: 'void'}\n```\n\n## API\n\n### `visit = visitChildren(visitor)`\n\nWrap [`visitor`][visitor] to be invoked for each [child][] in the nodes later\ngiven to [`visit`][visit].\n\n#### `function visitor(child, index, parent)`\n\nInvoked if [`visit`][visit] is called on a [parent][] node for each [child][].\n\n#### `function visit(parent)`\n\nInvoke [`visitor`][visitor] for each [child][] of the [parent][].\n\n## Related\n\n*   [`unist-util-visit`](https://github.com/syntax-tree/unist-util-visit)\n    — Recursively walk over nodes\n*   [`unist-util-visit-parents`](https://github.com/syntax-tree/unist-util-visit-parents)\n    — Like `visit`, but with a stack of parents\n*   [`unist-util-filter`](https://github.com/eush77/unist-util-filter)\n    — Create a new tree with all nodes that pass a test\n*   [`unist-util-map`](https://github.com/syntax-tree/unist-util-map)\n    — Create a new tree with all nodes mapped by a given function\n*   [`unist-util-flatmap`](https://gitlab.com/staltz/unist-util-flatmap)\n    — Create a new tree by mapping (to an array) with the provided function and\n    then flattening\n*   [`unist-util-find-all-after`](https://github.com/syntax-tree/unist-util-find-all-after)\n    — Find nodes after another node\n*   [`unist-util-find-all-before`](https://github.com/syntax-tree/unist-util-find-all-before)\n    — Find nodes before another node\n*   [`unist-util-find-after`](https://github.com/syntax-tree/unist-util-find-after)\n    — Find a node after another node\n*   [`unist-util-find-before`](https://github.com/syntax-tree/unist-util-find-before)\n    — Find a node before another node\n*   [`unist-util-find-all-between`](https://github.com/mrzmmr/unist-util-find-all-between)\n    — Find all nodes between two nodes\n*   [`unist-util-remove`](https://github.com/eush77/unist-util-remove)\n    — Remove nodes from a tree that pass a test\n*   [`unist-util-select`](https://github.com/eush77/unist-util-select)\n    — Select nodes with CSS-like selectors\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [Code of Conduct][coc].\nBy interacting with this repository, organisation, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definition -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/unist-util-visit-children.svg\n\n[build]: https://travis-ci.org/syntax-tree/unist-util-visit-children\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-visit-children.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/unist-util-visit-children\n\n[downloads-badge]: https://img.shields.io/npm/dm/unist-util-visit-children.svg\n\n[downloads]: https://www.npmjs.com/package/unist-util-visit-children\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/unist-util-visit-children.svg\n\n[size]: https://bundlephobia.com/result?p=unist-util-visit-children\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/syntax-tree\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[parent]: https://github.com/syntax-tree/unist#parent-1\n\n[child]: https://github.com/syntax-tree/unist#child\n\n[visit]: #function-visitparent\n\n[visitor]: #function-visitorchild-index-parent\n\n[contributing]: https://github.com/syntax-tree/.github/blob/master/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/master/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/master/code-of-conduct.md\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unist-util-visit-children/-/unist-util-visit-children-1.1.4.tgz#e8a087e58a33a2815f76ea1901c15dec2cb4b432",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unist-util-visit-children/-/unist-util-visit-children-1.1.4.tgz",
    "hash": "e8a087e58a33a2815f76ea1901c15dec2cb4b432",
    "integrity": "sha512-sA/nXwYRCQVRwZU2/tQWUqJ9JSFM1X3x7JIOsIgSzrFHcfVt6NkzDtKzyxg2cZWkCwGF9CO8x4QNZRJRMK8FeQ==",
    "registry": "npm",
    "packageName": "unist-util-visit-children",
    "cacheIntegrity": "sha512-sA/nXwYRCQVRwZU2/tQWUqJ9JSFM1X3x7JIOsIgSzrFHcfVt6NkzDtKzyxg2cZWkCwGF9CO8x4QNZRJRMK8FeQ== sha1-6KCH5YozooFfduoZAcFd7Cy0tDI="
  },
  "registry": "npm",
  "hash": "e8a087e58a33a2815f76ea1901c15dec2cb4b432"
}