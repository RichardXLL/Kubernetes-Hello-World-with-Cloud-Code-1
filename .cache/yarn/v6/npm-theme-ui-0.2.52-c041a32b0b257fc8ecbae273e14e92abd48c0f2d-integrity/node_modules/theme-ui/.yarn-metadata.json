{
  "manifest": {
    "name": "theme-ui",
    "version": "0.2.52",
    "description": "Build consistent, themeable React UIs based on design system constraints",
    "main": "dist/index.js",
    "module": "dist/index.esm.js",
    "author": {
      "name": "Brent Jackson",
      "email": "jxnblk@gmail.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/system-ui/theme-ui.git"
    },
    "scripts": {
      "prepare": "microbundle --no-compress",
      "watch": "microbundle watch --no-compress"
    },
    "peerDependencies": {
      "@emotion/core": "^10.0.0",
      "@mdx-js/react": "^1.0.0",
      "react": "^16.8.0"
    },
    "dependencies": {
      "@emotion/is-prop-valid": "^0.8.1",
      "@styled-system/css": "^5.0.16",
      "deepmerge": "^4.0.0"
    },
    "devDependencies": {
      "@emotion/core": "^10.0.0",
      "@mdx-js/react": "^1.0.0"
    },
    "keywords": [
      "theme-ui",
      "emotion",
      "mdx",
      "css",
      "styles",
      "css-in-js"
    ],
    "gitHead": "134c8782513239021da775f612e2f9493e968aca",
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-theme-ui-0.2.52-c041a32b0b257fc8ecbae273e14e92abd48c0f2d-integrity/node_modules/theme-ui/package.json",
    "readmeFilename": "README.md",
    "readme": "<img\n  src=\"https://contrast.now.sh/cff/40f?size=192&fontSize=2&baseline=2&fontWeight=900&radius=32&text=UI\"\n  width=\"96\"\n  heigh=\"96\"\n/>\n\n# Theme UI\n\nBuild consistent, themeable React apps based on constraint-based design principles | Built with Emotion + Styled System + MDX + Typography.js\n\n[![GitHub][github-badge]][github]\n[![Stars][stars]][github]\n[![Build Status][circleci-badge]][circleci]\n[![Version][version]][npm]\n![MIT License][license]\n[![system-ui/theme][system-ui-badge]](https://system-ui.com/theme)\n![][size]\n\nhttps://theme-ui.com\n\n[github]: https://github.com/system-ui/theme-ui\n[github-badge]: https://flat.badgen.net/badge/-/github?icon=github&label\n[stars]: https://flat.badgen.net/github/stars/system-ui/theme-ui\n[circleci]: https://circleci.com/gh/system-ui/theme-ui\n[circleci-badge]: https://flat.badgen.net/circleci/github/system-ui/theme-ui/master\n[version]: https://flat.badgen.net/npm/v/theme-ui\n[npm]: https://npmjs.com/package/theme-ui\n[license]: https://flat.badgen.net/badge/license/MIT/blue\n[system-ui-badge]: https://flat.badgen.net/badge/system-ui/theme/black\n[size]: https://flat.badgen.net/bundlephobia/minzip/theme-ui\n\nBuilt for white-labels, themes, and other applications where customizing colors, typography, and layout are treated as first-class citizens\nand based on the System UI [Theme Specification][],\nTheme UI is intended to work in a variety of applications, libraries, and other UI components.\nColors, typography, and layout styles derived from customizable scales and design tokens,\nhelp you build UI rooted in constraint-based design principles.\n\n- Styled system without creating components\n- First class support for the `css` prop\n- Style [MDX][] content with a simple, expressive API\n- Use [Typography.js][] themes\n- Works with virtually any UI component library\n- Works with existing [Styled System][] components\n- Quick mobile-first responsive styles\n- Built-in support for dark modes\n- Primitive page layout components\n- Plugin for use in [Gatsby][] sites and themes\n- Define your own design tokens\n- Built with the System UI [Theme Specification][] for interoperability\n- Keep styles isolated with [Emotion][]\n\n[emotion]: https://emotion.sh\n[mdx]: https://mdxjs.com\n[styled system]: https://styled-system.com\n[gatsby]: https://gatsbyjs.org\n[@styled-system/css]: https://styled-system.com/css\n[theme specification]: https://system-ui.com/theme\n[typography.js]: https://github.com/KyleAMathews/typography.js\n\n## Getting Started\n\n```sh\nnpm i theme-ui @emotion/core @mdx-js/react\n```\n\nAny styles in your app can reference values from the global `theme` object.\nTo provide the theme in context,\nwrap your application with the `ThemeProvider` component and pass in a custom `theme` object.\n\n```jsx\n// basic usage\nimport React from 'react'\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\nexport default props => (\n  <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\n)\n```\n\nThe `theme` object follows the System UI [Theme Specification](/theme-spec),\nwhich lets you define custom color palettes, typographic scales, fonts, and more.\nRead more about [theming](https://theme-ui.com/theming).\n\n```js\n// example theme.js\nexport default {\n  fonts: {\n    body: 'system-ui, sans-serif',\n    heading: '\"Avenir Next\", sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#33e',\n  },\n}\n```\n\n## `sx` prop\n\nThe `sx` prop works similarly to Emotion's `css` prop, accepting style objects to add CSS directly to an element in JSX, but includes extra theme-aware functionality.\nUsing the `sx` prop for styles means that certain properties can reference values defined in your `theme` object.\nThis is intended to make keeping styles consistent throughout your app the easy thing to do.\n\nThe `sx` prop only works in modules that have defined a custom pragma at the top of the file, which replaces the default `React.createElement` function.\nThis means you can control which modules in your application opt into this feature without the need for a Babel plugin or additional configuration.\n\n```jsx\n/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    sx={{\n      fontWeight: 'bold',\n      fontSize: 4, // picks up value from `theme.fontSizes[4]`\n      color: 'primary', // picks up value from `theme.colors.primary`\n    }}>\n    Hello\n  </div>\n)\n```\n\nUnder the hood, this uses the [`@styled-system/css`](https://styled-system.com/css) utility and Emotion's custom JSX pragma implementation.\nRead more about [how the custom pragma works](https://theme-ui.com/how-it-works/#jsx-pragma).\n\n## Responsive styles\n\nThe `sx` prop also supports using arrays as values to change properties responsively with a mobile-first approach.\nThis API originated in [Styled System][] and is intended as [a terser syntax for applying responsive styles](https://styled-system.com/guides/array-props) across a singular dimension.\n\n```jsx\n/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    sx={{\n      // applies width 100% to all viewport widths,\n      // width 50% above the first breakpoint,\n      // and 25% above the next breakpoint\n      width: ['100%', '50%', '25%'],\n    }}\n  />\n)\n```\n\n---\n\n## Documentation\n\n- [Theming](https://theme-ui.com/theming)\n- [The `sx` Prop](https://theme-ui.com/sx-prop)\n- [Layout](https://theme-ui.com/layout)\n- [Color Modes](https://theme-ui.com/color-modes)\n- [Styled](https://theme-ui.com/styled)\n- [MDX Components](https://theme-ui.com/mdx-components)\n- [Theme Spec](https://theme-ui.com/theme-spec)\n- [Gatsby Plugin](https://theme-ui.com/gatsby-plugin)\n- [API](https://theme-ui.com/api)\n\nMIT License\n",
    "licenseText": "# The MIT License (MIT)\n\nCopyright (c) 2019 Brent Jackson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/theme-ui/-/theme-ui-0.2.52.tgz#c041a32b0b257fc8ecbae273e14e92abd48c0f2d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/theme-ui/-/theme-ui-0.2.52.tgz",
    "hash": "c041a32b0b257fc8ecbae273e14e92abd48c0f2d",
    "integrity": "sha512-JFujorP5aFxIm1UyVCtefN5baXjwh5TXHKFYNWgAP+3rqVvggIr46uSMrRNvDjyhFOQiMK8YI8ctPQrrhcETpw==",
    "registry": "npm",
    "packageName": "theme-ui",
    "cacheIntegrity": "sha512-JFujorP5aFxIm1UyVCtefN5baXjwh5TXHKFYNWgAP+3rqVvggIr46uSMrRNvDjyhFOQiMK8YI8ctPQrrhcETpw== sha1-wEGjKwslf8jsuuJz4U6Sq9SMDy0="
  },
  "registry": "npm",
  "hash": "c041a32b0b257fc8ecbae273e14e92abd48c0f2d"
}