{
  "manifest": {
    "name": "webpack-stats-plugin",
    "version": "0.3.2",
    "description": "Webpack stats plugin",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/FormidableLabs/webpack-stats-plugin"
    },
    "keywords": [
      "webpack"
    ],
    "author": {
      "name": "Ryan Roemer",
      "email": "ryan.roemer@formidable.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/FormidableLabs/webpack-stats-plugin/issues"
    },
    "files": [
      "lib",
      "index.js"
    ],
    "engines": {
      "node": ">=4"
    },
    "scripts": {
      "lint": "eslint .",
      "test": "yarn run test:clean && yarn run test:build && yarn run test:run",
      "test:run": "mocha 'test/**/*.spec.js'",
      "test:clean": "rm -rf test/webpack*/build*",
      "test:build:single": "cd node_modules/webpack${VERS} && node index.js --config ../../test/webpack${VERS}/webpack.config${WP_EXTRA}.js",
      "test:build": "builder envs test:build:single '[{\"VERS\":1},{\"VERS\":2},{\"VERS\":3},{\"VERS\":4}]' --buffer",
      "check": "yarn run lint && yarn run test"
    },
    "dependencies": {},
    "devDependencies": {
      "babel-eslint": "^10.1.0",
      "builder": "^5.0.0",
      "chai": "^4.2.0",
      "eslint": "^7.2.0",
      "eslint-config-formidable": "^4.0.0",
      "eslint-plugin-filenames": "^1.3.2",
      "eslint-plugin-import": "^2.21.2",
      "eslint-plugin-promise": "^4.2.1",
      "mocha": "^8.0.1",
      "pify": "^5.0.0",
      "webpack1": "file:../../.cache/yarn/v6/npm-webpack-stats-plugin-0.3.2-c06b185aa5dcc93b3f0c3a7891d24a111f849740-integrity/node_modules/webpack-stats-plugin/test/webpack1",
      "webpack2": "file:../../.cache/yarn/v6/npm-webpack-stats-plugin-0.3.2-c06b185aa5dcc93b3f0c3a7891d24a111f849740-integrity/node_modules/webpack-stats-plugin/test/webpack2",
      "webpack3": "file:../../.cache/yarn/v6/npm-webpack-stats-plugin-0.3.2-c06b185aa5dcc93b3f0c3a7891d24a111f849740-integrity/node_modules/webpack-stats-plugin/test/webpack3",
      "webpack4": "file:../../.cache/yarn/v6/npm-webpack-stats-plugin-0.3.2-c06b185aa5dcc93b3f0c3a7891d24a111f849740-integrity/node_modules/webpack-stats-plugin/test/webpack4"
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-webpack-stats-plugin-0.3.2-c06b185aa5dcc93b3f0c3a7891d24a111f849740-integrity/node_modules/webpack-stats-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "Webpack Stats Plugin\n====================\n\n[![npm version][npm_img]][npm_site]\n[![Build Status][trav_img]][trav_site]\n[![MIT license][lic_img]][lic_site]\n[![Maintenance Status][maintenance_image]](#maintenance-status)\n\nThis plugin will ingest the webpack [stats](https://webpack.js.org/configuration/stats/#stats) object, process / transform the object and write out to a file for further consumption.\n\nThe most common use case is building a hashed bundle and wanting to programmatically refer to the correct bundle path in your Node.js server.\n\n## Installation\n\nThe plugin is available via [npm](https://www.npmjs.com/package/webpack-stats-plugin):\n\n```sh\n$ npm install --save-dev webpack-stats-plugin\n$ yarn add --dev webpack-stats-plugin\n```\n\n## Examples\n\nWe have example webpack configurations for all versions of webpack. See., e.g. [`test/webpack4/webpack.config.js`](test/webpack4/webpack.config.js).\n\n### CLI\n\nIf you are using `webpack-cli`, you can enable with:\n\n```sh\n$ webpack-cli --plugin webpack-stats-plugin/lib/stats-writer-plugin\n```\n\n### Basic\n\nA basic `webpack.config.js`-based integration:\n\n```js\nconst { StatsWriterPlugin } = require(\"webpack-stats-plugin\")\n\nmodule.exports = {\n  plugins: [\n    // Everything else **first**.\n\n    // Write out stats file to build directory.\n    new StatsWriterPlugin({\n      filename: \"stats.json\" // Default\n    })\n  ]\n}\n```\n\n### Custom `stats` Configuration\n\nThis option is passed to the webpack compiler's [`getStats().toJson()`](https://webpack.js.org/api/node/#statstojsonoptions) method.\n\n```js\nconst { StatsWriterPlugin } = require(\"webpack-stats-plugin\")\n\nmodule.exports = {\n  plugins: [\n    new StatsWriterPlugin({\n      stats: {\n        all: false,\n        assets: true\n      }\n    })\n  ]\n}\n```\n\n### Custom Transform Function\n\nThe transform function has a signature of:\n\n```js\n/**\n * Transform skeleton.\n *\n * @param {Object} data           Stats object\n * @param {Object} opts           Options\n * @param {Object} opts.compiler  Current compiler instance\n * @returns {String}              String to emit to file\n */\nfunction (data, opts) {}\n```\n\nwhich you can use like:\n\n```js\nconst { StatsWriterPlugin } = require(\"webpack-stats-plugin\");\n\nmodule.exports = {\n  plugins: [\n    new StatsWriterPlugin({\n      transform(data, opts) {\n        return JSON.stringify({\n          main: data.assetsByChunkName.main[0],\n          css: data.assetsByChunkName.main[1]\n        }, null, 2);\n      }\n    })\n  ]\n}\n```\n\n### Promise transform\n\nYou can use an asynchronous promise to transform as well:\n\n```js\nconst { StatsWriterPlugin } = require(\"webpack-stats-plugin\");\n\nmodule.exports = {\n  plugins: [\n    new StatsWriterPlugin({\n      filename: \"stats-transform-promise.json\",\n      transform(data) {\n        return Promise.resolve().then(() => JSON.stringify({\n          main: data.assetsByChunkName.main\n        }, null, INDENT));\n      }\n    })\n  ]\n}\n```\n\n## Plugins\n\n* [`StatsWriterPlugin(opts)`](#statswriterplugin-opts-)\n\n### `StatsWriterPlugin(opts)`\n* **opts** (`Object`) options\n* **opts.filename** (`String|Function`) output file name (Default: `\"stats.json\"`)\n* **opts.fields** (`Array`) fields of stats obj to keep (Default: `[\"assetsByChunkName\"]`)\n* **opts.stats** (`Object|String`) stats config object or string preset (Default: `{}`)\n* **opts.transform** (`Function|Promise`) transform stats obj (Default: `JSON.stringify()`)\n\nStats writer module.\n\nStats can be a string or array (we'll have an array due to source maps):\n\n```js\n\"assetsByChunkName\": {\n  \"main\": [\n    \"cd6371d4131fbfbefaa7.bundle.js\",\n    \"../js-map/cd6371d4131fbfbefaa7.bundle.js.map\"\n  ]\n},\n```\n\n**Note**: The stats object is **big**. It includes the entire source included in a bundle. Thus, we default `opts.fields` to `[\"assetsByChunkName\"]` to only include those. However, if you want the _whole thing_ (maybe doing an `opts.transform` function), then you can set `fields: null` in options to get **all** of the stats object.\n\nYou may also pass a custom stats config object (or string preset) via `opts.stats` in order to select exactly what you want added to the data passed to the transform. When `opts.stats` is passed, `opts.fields` will default to `null`.\n\nSee:\n- https://webpack.js.org/configuration/stats/#stats\n- https://webpack.js.org/api/node/#stats-object\n\n**`filename`**: The `opts.filename` option can be a file name or path relative to `output.path` in webpack configuration. It should not be absolute. It may also be a function, in which case it will be passed the current compiler instance and expected to return a filename to use.\n\n**`transform`**: By default, the retrieved stats object is `JSON.stringify`'ed but by supplying an alternate transform you can target _any_ output format. See [`test/webpack4/webpack.config.js`](test/webpack4/webpack.config.js) for various examples including Markdown output.\n\n- **Warning**: The output of `transform` should be a `String`, not an object. On Node `v4.x` if you return a real object in `transform`, then webpack will break with a `TypeError` (See [#8](https://github.com/FormidableLabs/webpack-stats-plugin/issues/8)). Just adding a simple `JSON.stringify()` around your object is usually what you need to solve any problems.\n\n## Contributions\n\nContributions welcome!\n\nWe test against all versions of webpack. For a full explanation of our functional tests, see [test/README.md](test/README.md)\n\nTo get started, first install:\n\n```sh\n$ yarn\n```\n\nOur tests first do various webpack builds and then run mocha asserts on the real outputted stats files. Inefficient, but for our small sample size efficient enough.\n\n```sh\n# Lint and tests\n$ yarn run lint\n$ yarn run test\n\n# All together\n$ yarn run check\n```\n\n## Maintenance Status\n\n**Active:** Formidable is actively working on this project, and we expect to continue for work for the foreseeable future. Bug reports, feature requests and pull requests are welcome.\n\n[npm_img]: https://badge.fury.io/js/webpack-stats-plugin.svg\n[npm_site]: http://badge.fury.io/js/webpack-stats-plugin\n[trav]: https://travis-ci.com/\n[trav_img]: https://api.travis-ci.com/FormidableLabs/webpack-stats-plugin.svg\n[trav_site]: https://travis-ci.com/FormidableLabs/webpack-stats-plugin\n[lic_img]: https://img.shields.io/npm/l/webpack-stats-plugin.svg?color=brightgreen&style=flat\n[lic_site]: https://github.com/FormidableLabs/webpack-stats-plugin/blob/main/LICENSE.txt\n[maintenance_image]: https://img.shields.io/badge/maintenance-active-green.svg?color=brightgreen&style=flat\n",
    "licenseText": "Copyright (C) 2015-2018 Formidable Labs, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/webpack-stats-plugin/-/webpack-stats-plugin-0.3.2.tgz#c06b185aa5dcc93b3f0c3a7891d24a111f849740",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/webpack-stats-plugin/-/webpack-stats-plugin-0.3.2.tgz",
    "hash": "c06b185aa5dcc93b3f0c3a7891d24a111f849740",
    "integrity": "sha512-kxEtPQ6lBBik2qtJlsZkiaDMI6rGXe9w1kLH9ZCdt0wgCGVnbwwPlP60cMqG6tILNFYqXDxNt4+c4OIIuE+Fnw==",
    "registry": "npm",
    "packageName": "webpack-stats-plugin",
    "cacheIntegrity": "sha512-kxEtPQ6lBBik2qtJlsZkiaDMI6rGXe9w1kLH9ZCdt0wgCGVnbwwPlP60cMqG6tILNFYqXDxNt4+c4OIIuE+Fnw== sha1-wGsYWqXcyTs/DDp4kdJKER+El0A="
  },
  "registry": "npm",
  "hash": "c06b185aa5dcc93b3f0c3a7891d24a111f849740"
}