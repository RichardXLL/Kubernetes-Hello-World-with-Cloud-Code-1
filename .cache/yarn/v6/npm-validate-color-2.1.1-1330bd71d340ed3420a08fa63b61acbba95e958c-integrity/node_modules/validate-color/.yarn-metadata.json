{
  "manifest": {
    "name": "validate-color",
    "version": "2.1.1",
    "private": false,
    "description": "Validate HTML colors by 'name', 'special name', 'hex', 'rgb', 'rgba', 'hsl', 'hsla', 'hwb' or 'lab' values",
    "keywords": [
      "validation",
      "colors",
      "validate color",
      "color validation",
      "HTML color validation",
      "validate HTML color"
    ],
    "homepage": "https://dreamyguy.github.io/validate-color/",
    "repository": {
      "type": "git",
      "url": "https://github.com/dreamyguy/validate-color"
    },
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "author": {
      "name": "Wallace Sidhr√©e",
      "email": "i@dreamyguy.com",
      "url": "http://sidhree.com/"
    },
    "copyright": "Copyright (c) Wallace Sidhr√©e - All rights reserved.",
    "license": "MIT",
    "peerDependencies": {
      "react": "^17.0.1",
      "react-dom": "^17.0.1"
    },
    "devDependencies": {
      "@babel/core": "^7.12.9",
      "@babel/preset-env": "^7.12.7",
      "@babel/preset-react": "^7.12.7",
      "babel-loader": "^8.2.2",
      "fork-me-on-github": "^1.0.6",
      "gh-pages": "^3.1.0",
      "node-sass": "^4.14.1",
      "react-emojis": "^1.0.6",
      "react-scripts": "^4.0.1",
      "webpack": "4.44.2",
      "webpack-cli": "^4.2.0"
    },
    "scripts": {
      "start": "react-scripts start",
      "prebuild": "echo üöÄ  Runnin 'build', hang tight!",
      "build": "react-scripts build",
      "postbuild": "echo üéâ 'build' was completed",
      "prebuild-npm": "./bin/preBuildNpm.sh",
      "build-npm": "NODE_ENV=npm webpack --config webpack.config.npm.js",
      "postbuild-npm": "./bin/postBuildNpm.sh",
      "test": "react-scripts test",
      "testTravis": "CI=true react-scripts test",
      "eject": "react-scripts eject",
      "predeploy": "npm run build",
      "deploy": "gh-pages -d build",
      "deploy-npm": "npm run build-npm && npm publish",
      "release": "npm run deploy && npm run deploy-npm"
    },
    "eslintConfig": {
      "extends": "react-app"
    },
    "browserslist": {
      "production": [
        ">0.2%",
        "not dead",
        "not op_mini all"
      ],
      "development": [
        "last 1 chrome version",
        "last 1 firefox version",
        "last 1 safari version"
      ]
    },
    "dependencies": {},
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-validate-color-2.1.1-1330bd71d340ed3420a08fa63b61acbba95e958c-integrity/node_modules/validate-color/package.json",
    "readmeFilename": "README.md",
    "readme": "![Validate Color](https://raw.githubusercontent.com/dreamyguy/validate-color/master/docs/validate-color-logo-github-full-width.png \"Validate all possible HTML colors!\")\n\n# Validate Color\n\n> ‚úÖüåàüôå Validate HTML colors by `name`, `special name`, `hex`, `rgb`, `rgba`, `hsl`, `hsla`, `hwb` or `lab` values\n\n[![Build Status](https://travis-ci.com/dreamyguy/validate-color.svg?branch=master)](https://travis-ci.org/dreamyguy/validate-color) [![Node Version](https://img.shields.io/badge/node-v12.4.0-brightgreen.svg)](https://github.com/nodejs/node/releases/tag/v12.4.0)\n[![NPM Version](https://img.shields.io/badge/npm-v6.9.0-brightgreen.svg)](https://github.com/npm/cli/releases/tag/v6.9.0)\n[![MIT Licence](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/dreamyguy/validate-color/blob/master/LICENSE)\n\n**_HTML colors are remarkably easy to get wrong_**, because they allow for so many different values.\n\nAs I was writing [Console Log Plus](https://github.com/dreamyguy/console-log-plus), I thought it would be great to allow users to pass any _HTML color_ they wanted as one of the parameter to the function. But since _HTML colors_ have so many variations and therefore are complex strings, it didn't take me long to realize that I'd have to make quite a few checks to validate the value passed by the user. That need brought me here.\n\n**Validate Color** let's one validate the color string against all current possible _HTML color_ values. Some examples:\n\n- `hex` - `#bada55`\n- `name` - `LightGoldenrodYellow`\n- `special name` - `currentColor`\n- `rgb` - `rgb(0 0 0)`\n- `rgba` - `rgba(0, 0, 0, .45)`\n- `hsl` - `hsl(4.71239rad, 60%, 70%)`\n- `hsla` - `hsla(180deg 100% 50% / .8)`\n- `hwb` - `hwb(180deg 0% 0% / 100%)`\n- `lab` - `lab(2000.1337% -8.6911 -159.131231 / .987189732)`\n\nBoth `rgba` and `hsla` are now officially merged into their `rgb` and `hsl` counterparts, so the `a` can be omitted. The `a` is considered legacy syntax, so it will still work.\n\n# Demo ‚úÖ üåà üôå\n\nTo demonstrate the power of _validate-color_, I decided it would be best to create a living github page, that would serve both as a way of showcase _validate-color_, and facilitate its use:\n\n[https://dreamyguy.github.io/validate-color/][7]\n\nOn this page you can:\n\n- **Validate HTML colors as you type**\n\n_On my TODO list:_\n\n- _See opaque colors against black and white backgrounds._\n- _See colors with transparency in different contexts._\n\n# Usage\n\n**validate-color** is also [available as a package on `npm`][6] and can be installed as a depedency with:\n\n    npm i validate-color --save\n\nAs with any node module, first you'll have to import it with `require`:\n\n```javascript\nvar validateColor = require(\"validate-color\");\n```\n\n...or through `import`:\n\n```javascript\nimport validateColor from \"validate-color\";\n```\n\nOnce you've done the import, you'll be able to do checks like (example in **React**):\n\n```javascript\nimport React from \"react\";\nimport validateColor from \"validate-color\";\n\nconst ColorBox = (props) => {\n  const { color = \"\", text = \"\" } = props;\n  const theColor = color && validateColor(color) ? color : \"transparent\";\n  return (\n    <div className=\"color-box\" style={{ backgroundColor: theColor }}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default ColorBox;\n```\n\n> üëâ The source for a full-fledged color validation component can be [viewed here](https://github.com/dreamyguy/validate-color/blob/master/src/app/App.js). That component can be [seen in action here][7].\n\n# Extend\n\nOne can \"extend\" the library by using only parts of it.\n\n**1. Validate only HTML colors (`hex`, `rgb`, `rgba`, `hsl`, `hsla`, `hwb`, `lab`), without `name`**\n\n```javascript\nimport { validateHTMLColor } from \"validate-color\";\n```\n\n**2. Validate only `HEX` colors**\n\n```javascript\nimport { validateHTMLColorHex } from \"validate-color\";\n```\n\n**3. Validate only `HSL` colors**\n\n```javascript\nimport { validateHTMLColorHsl } from \"validate-color\";\n```\n\n**4. Validate only `NAME` colors**\n\n```javascript\nimport { validateHTMLColorName } from \"validate-color\";\n```\n\n**5. Validate only `RGB` colors**\n\n```javascript\nimport { validateHTMLColorRgb } from \"validate-color\";\n```\n\n**6. Validate only `SPECIAL NAME` colors**\n\n```javascript\nimport { validateHTMLColorSpecialName } from \"validate-color\";\n```\n\n**7. Validate only `HWB` colors**\n\n```javascript\nimport { validateHTMLColorHwb } from \"validate-color\";\n```\n\n**8. Validate only `LAB` colors**\n\n```javascript\nimport { validateHTMLColorLab } from \"validate-color\";\n```\n\n> üëâ I was proactive and added validation to these relatively new HTML/CSS colors (**HWB** & **LAB**), but since [they're still drafts at the time of this writing][9], they might still be not fully supported at the time of this reading.\n\n# Development\n\n## Getting started\n\nClone this repo locally. You'll need to have [NodeJS][1] installed. Install all dependencies by running:\n\n    npm i\n\n## Run it locally\n\nTo start the app locally, run:\n\n    npm run start\n\nThis command fires up the application on port `9900`, making it visible on http://localhost:9900. Because this app is based on [create-react-app][2], the port number should be configured on the [.env](https://github.com/dreamyguy/validate-color/blob/master/.env#L1) file.\n\n## Building the frontend for Production\n\nWhen you're ready to build for production, run:\n\n     npm run build\n\nThis command compiles all production-optimised resources to a folder called **build**. It's meant to be run remotely, at the environment host, at build time.\n\n## Building for NPM\n\nWhen you're done with your changes, run:\n\n     npm run build-npm\n\nThis command compiles the distribution-optimised `javascript` to `lib/index.js`, a file compiled out of [src/validate-color/index.js][3].\n\n> üëâ Note that the `lib/` folder and its contents are only available at the [NPM distribution][6].\n\n# Testing\n\nThis project wouldn't be complete without proper testing.\n\n[Jest][4] is my Unit Testing framework of choice. It's well documented and shares good practices & syntax with its most known predecessors (Mocha, Jasmine, etc). [Babel][5] was introduced as a dependency to the project because of Jest, but it was worth it since now we can use **ES6** syntax on our tests as well.\n\nRun all tests, in watch mode:\n\n    npm run test\n\nTests are also run through [Travis][8] on every push to `master`. The build status is shown [at the top of this README](https://github.com/dreamyguy/validate-color#validate-color).\n\n> üëâ All tests are named according to the file they're testing: `index.js` -> _`index.test.js`_, and reside under the same directory. Since `Jest` comes as courtesy of [CRA][2], all tests should be placed under the [src/](https://github.com/dreamyguy/validate-color/blob/master/src/) folder.\n\n# Deploying\n\nThis repo is a hybrid one. It:\n\n- Builds the NPM distribution\n- Builds the GitHub Page that serves as a demo/showcase\n\nThere are 3 commands one can run to deploy to these two places.\n\n**Deploy to GitHub Pages**\n\n    npm run deploy\n\n**Deploy to NPM**\n\n    npm run deploy-npm\n\n**Deploy to both places at once**\n\n    npm run release\n\n> ‚ö†Ô∏è Make sure to bump version before releasing!\n\n## Good to know\n\n### License\n\n[MIT](LICENSE)\n\n### Credits & Resources\n\n- [Source from which the color name list was extracted from](https://htmlcolorcodes.com/color-names/)\n- [The Ultimate Guide to CSS Colors 2020 Edition](https://dev.to/alvaromontoro/the-ultimate-guide-to-css-colors-2020-edition-1bh1#hsl)\n- [MDN: CSS Colors](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\n- [MDN: Color Picker tool](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Colors/Color_picker_tool)\n- [CSS Color Module Level 4 Editor's Draft][9]\n\n### About\n\n**Validate Color** was put together by [Wallace Sidhr√©e][1]. üë®‚Äçüíªüá≥üá¥\n\n[1]: http://sidhree.com/\n[2]: https://facebook.github.io/create-react-app/\n[3]: https://github.com/dreamyguy/validate-color/blob/master/src/validate-color/index.js\n[4]: https://jestjs.io/\n[5]: https://babeljs.io/\n[6]: https://www.npmjs.com/package/validate-color\n[7]: https://dreamyguy.github.io/validate-color/\n[8]: https://travis-ci.com/dreamyguy/validate-color\n[9]: https://drafts.csswg.org/css-color/\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Wallace Sidhr√©e\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/validate-color/-/validate-color-2.1.1.tgz#1330bd71d340ed3420a08fa63b61acbba95e958c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/validate-color/-/validate-color-2.1.1.tgz",
    "hash": "1330bd71d340ed3420a08fa63b61acbba95e958c",
    "integrity": "sha512-hKG4b7TdXtqom+Uby8LyyxaGK8gEpk60T0stdKXdPSHW+sPOBjJX6B9mFUa9gwQKkNCxvz6e1nxmohZmBWlnBg==",
    "registry": "npm",
    "packageName": "validate-color",
    "cacheIntegrity": "sha512-hKG4b7TdXtqom+Uby8LyyxaGK8gEpk60T0stdKXdPSHW+sPOBjJX6B9mFUa9gwQKkNCxvz6e1nxmohZmBWlnBg== sha1-EzC9cdNA7TQgoI+mO2Gsu6lelYw="
  },
  "registry": "npm",
  "hash": "1330bd71d340ed3420a08fa63b61acbba95e958c"
}