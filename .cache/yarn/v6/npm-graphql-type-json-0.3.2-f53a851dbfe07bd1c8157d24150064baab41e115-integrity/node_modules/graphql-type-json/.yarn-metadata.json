{
  "manifest": {
    "name": "graphql-type-json",
    "version": "0.3.2",
    "description": "JSON scalar types for GraphQL.js",
    "files": [
      "lib",
      "es"
    ],
    "main": "lib/index.js",
    "module": "es/index.js",
    "types": "lib/index.d.ts",
    "scripts": {
      "build": "npm run build:cjs && npm run build:esm && npm run build:types",
      "build:cjs": "babel -d lib --delete-dir-on-start src",
      "build:esm": "babel --env-name esm -d es --delete-dir-on-start src",
      "build:types": "cpy types/*.d.ts lib",
      "format": "eslint --fix . && npm run prettier -- --write",
      "lint": "eslint . && npm run prettier -- -l",
      "prepublish": "npm run build",
      "prettier": "prettier --ignore-path .eslintignore '**/*.{md,ts,tsx}'",
      "tdd": "jest --watch",
      "test": "npm run lint && npm run test:ts && npm run testonly -- --coverage",
      "test:ts": "dtslint types",
      "testonly": "jest --runInBand --verbose"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "*.js": "eslint --fix",
      "*.{md,ts}": "prettier --write"
    },
    "prettier": {
      "printWidth": 79,
      "singleQuote": true,
      "trailingComma": "all"
    },
    "jest": {
      "collectCoverageFrom": [
        "src/**"
      ],
      "testEnvironment": "node"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/taion/graphql-type-json.git"
    },
    "keywords": [
      "graphql"
    ],
    "author": {
      "name": "Jimmy Jia"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/taion/graphql-type-json/issues"
    },
    "homepage": "https://github.com/taion/graphql-type-json#readme",
    "devDependencies": {
      "@babel/cli": "^7.10.1",
      "@babel/core": "^7.10.2",
      "@babel/preset-env": "^7.10.2",
      "babel-jest": "^26.0.1",
      "codecov": "^3.7.0",
      "cpy-cli": "^3.1.1",
      "dtslint": "^3.6.11",
      "eslint": "^7.2.0",
      "eslint-config-4catalyzer": "^1.1.2",
      "eslint-config-4catalyzer-jest": "^2.0.7",
      "eslint-config-prettier": "^6.11.0",
      "eslint-plugin-import": "^2.21.2",
      "eslint-plugin-jest": "^23.13.2",
      "eslint-plugin-prettier": "^3.1.3",
      "graphql": "^15.1.0",
      "husky": "^4.2.5",
      "jest": "^26.0.1",
      "lint-staged": "^10.2.9",
      "prettier": "^2.0.5",
      "typescript": "^3.9.5"
    },
    "peerDependencies": {
      "graphql": ">=0.8.0"
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-graphql-type-json-0.3.2-f53a851dbfe07bd1c8157d24150064baab41e115-integrity/node_modules/graphql-type-json/package.json",
    "readmeFilename": "README.md",
    "readme": "# graphql-type-json [![Travis][build-badge]][build] [![npm][npm-badge]][npm]\n\nJSON scalar types for [GraphQL.js](https://github.com/graphql/graphql-js).\n\n[![Codecov][codecov-badge]][codecov]\n\n## Usage\n\nThis package exports a JSON value scalar GraphQL.js type:\n\n```js\nimport GraphQLJSON from 'graphql-type-json';\n```\n\nIt also exports a JSON object scalar type:\n\n```js\nimport { GraphQLJSONObject } from 'graphql-type-json';\n```\n\nThese types can also be imported as follows using CommonJS:\n\n```js\nconst { GraphQLJSON, GraphQLJSONObject } = require('graphql-type-json');\n```\n\n`GraphQLJSON` can represent any JSON-serializable value, including scalars, arrays, and objects. `GraphQLJSONObject` represents specifically JSON objects, which covers many practical use cases for JSON scalars.\n\n### Programmatically-constructed schemas\n\nYou can use this in a programmatically-constructed schema as with any other scalar type:\n\n```js\nimport GraphQLJSON, { GraphQLJSONObject } from 'graphql-type-json';\n\nexport default new GraphQLObjectType({\n  name: 'MyType',\n\n  fields: {\n    myValue: { type: GraphQLJSON },\n    myObject: { type: GraphQLJSONObject },\n  },\n});\n```\n\n### SDL with [GraphQL-tools](https://github.com/apollographql/graphql-tools)\n\nWhen using the SDL with GraphQL-tools, define `GraphQLJSON` as the resolver for the appropriate scalar type in your schema:\n\n```js\nimport { makeExecutableSchema } from 'graphql-tools';\nimport GraphQLJSON, { GraphQLJSONObject } from 'graphql-type-json';\n\nconst typeDefs = `\nscalar JSON\nscalar JSONObject\n\ntype MyType {\n  myValue: JSON\n  myObject: JSONObject\n}\n\n# ...\n`;\n\nconst resolvers = {\n  JSON: GraphQLJSON,\n  JSONObject: GraphQLJSONObject,\n};\n\nexport default makeExecutableSchema({ typeDefs, resolvers });\n```\n\n[build-badge]: https://img.shields.io/travis/taion/graphql-type-json/master.svg\n[build]: https://travis-ci.org/taion/graphql-type-json\n[npm-badge]: https://img.shields.io/npm/v/graphql-type-json.svg\n[npm]: https://www.npmjs.com/package/graphql-type-json\n[codecov-badge]: https://img.shields.io/codecov/c/github/taion/graphql-type-json/master.svg\n[codecov]: https://codecov.io/gh/taion/graphql-type-json\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jimmy Jia\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/graphql-type-json/-/graphql-type-json-0.3.2.tgz#f53a851dbfe07bd1c8157d24150064baab41e115",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/graphql-type-json/-/graphql-type-json-0.3.2.tgz",
    "hash": "f53a851dbfe07bd1c8157d24150064baab41e115",
    "integrity": "sha512-J+vjof74oMlCWXSvt0DOf2APEdZOCdubEvGDUAlqH//VBYcOYsGgRW7Xzorr44LvkjiuvecWc8fChxuZZbChtg==",
    "registry": "npm",
    "packageName": "graphql-type-json",
    "cacheIntegrity": "sha512-J+vjof74oMlCWXSvt0DOf2APEdZOCdubEvGDUAlqH//VBYcOYsGgRW7Xzorr44LvkjiuvecWc8fChxuZZbChtg== sha1-9TqFHb/ge9HIFX0kFQBkuqtB4RU="
  },
  "registry": "npm",
  "hash": "f53a851dbfe07bd1c8157d24150064baab41e115"
}