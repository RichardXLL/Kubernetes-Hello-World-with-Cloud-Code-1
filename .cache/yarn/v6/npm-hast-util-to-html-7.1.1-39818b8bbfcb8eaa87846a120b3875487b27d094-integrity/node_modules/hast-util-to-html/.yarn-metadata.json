{
  "manifest": {
    "name": "hast-util-to-html",
    "version": "7.1.1",
    "description": "hast utility to serialize to HTML",
    "license": "MIT",
    "keywords": [
      "unist",
      "hast",
      "hast-util",
      "util",
      "utility",
      "html",
      "serialize",
      "stringify",
      "tostring"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/hast-util-to-html.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hast-util-to-html/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "files": [
      "lib",
      "index.js",
      "types/index.d.ts"
    ],
    "types": "types/index.d.ts",
    "dependencies": {
      "ccount": "^1.0.0",
      "comma-separated-tokens": "^1.0.0",
      "hast-util-is-element": "^1.0.0",
      "hast-util-whitespace": "^1.0.0",
      "html-void-elements": "^1.0.0",
      "property-information": "^5.0.0",
      "space-separated-tokens": "^1.0.0",
      "stringify-entities": "^3.0.1",
      "unist-util-is": "^4.0.0",
      "xtend": "^4.0.0"
    },
    "devDependencies": {
      "@types/unist": "^2.0.0",
      "browserify": "^16.0.0",
      "dtslint": "^3.0.0",
      "hastscript": "^5.0.0",
      "nyc": "^15.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^8.0.0",
      "remark-preset-wooorm": "^7.0.0",
      "tape": "^5.0.0",
      "tinyify": "^2.0.0",
      "unist-builder": "^2.0.0",
      "xo": "^0.30.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write . && xo --fix",
      "build-bundle": "browserify . -s hastUtilToHtml > hast-util-to-html.js",
      "build-mangle": "browserify . -s hastUtilToHtml -p tinyify > hast-util-to-html.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test/index.js",
      "test-types": "dtslint types",
      "test": "npm run format && npm run build && npm run test-coverage && npm run test-types"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "unicorn/prefer-includes": "off",
        "unicorn/prefer-number-properties": "off",
        "guard-for-in": "off"
      },
      "ignores": [
        "hast-util-to-html.js"
      ]
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/senmioxl/.cache/yarn/v6/npm-hast-util-to-html-7.1.1-39818b8bbfcb8eaa87846a120b3875487b27d094-integrity/node_modules/hast-util-to-html/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hast-util-to-html\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**hast**][hast] utility to serialize to HTML.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install hast-util-to-html\n```\n\n## Use\n\n```js\nvar h = require('hastscript')\nvar toHtml = require('hast-util-to-html')\n\nvar tree = h('.alpha', [\n  'bravo ',\n  h('b', 'charlie'),\n  ' delta ',\n  h('a.echo', {download: true}, 'foxtrot')\n])\n\nconsole.log(toHtml(tree))\n```\n\nYields:\n\n```html\n<div class=\"alpha\">bravo <b>charlie</b> delta <a class=\"echo\" download>foxtrot</a></div>\n```\n\n## API\n\n### `toHtml(tree[, options])`\n\nSerialize the given [**hast**][hast] [*tree*][tree] (or list of nodes).\n\n###### `options.space`\n\nWhether the [*root*][root] of the [*tree*][tree] is in the `'html'` or `'svg'`\nspace (enum, `'svg'` or `'html'`, default: `'html'`).\n\nIf an `svg` element is found in the HTML space, `toHtml` automatically switches\nto the SVG space when entering the element, and switches back when exiting.\n\n###### `options.entities`\n\nConfiguration for [`stringify-entities`][stringify-entities] (`Object`, default:\n`{}`).\nDo not use `escapeOnly`, `attribute`, or `subset` (`toHtml` already passes\nthose, so they won’t work).\nHowever, `useNamedReferences`, `useShortestReferences`, and\n`omitOptionalSemicolons` are all fine.\n\n###### `options.voids`\n\nTag names of [*elements*][element] to serialize without closing tag\n(`Array.<string>`, default: [`html-void-elements`][html-void-elements]).\n\nNot used in the SVG space.\n\n###### `options.upperDoctype`\n\nUse a `<!DOCTYPE…` instead of `<!doctype…`.\nUseless except for XHTML (`boolean`, default: `false`).\n\n###### `options.quote`\n\nPreferred quote to use (`'\"'` or `'\\''`, default: `'\"'`).\n\n###### `options.quoteSmart`\n\nUse the other quote if that results in less bytes (`boolean`, default: `false`).\n\n###### `options.preferUnquoted`\n\nLeave attributes unquoted if that results in less bytes (`boolean`, default:\n`false`).\n\nNot used in the SVG space.\n\n###### `options.omitOptionalTags`\n\nOmit optional opening and closing tags (`boolean`, default: `false`).\nFor example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>`\nclosing tags can be omitted.\nThe first because it’s followed by another `li`, the last because it’s followed\nby nothing.\n\nNot used in the SVG space.\n\n###### `options.collapseEmptyAttributes`\n\nCollapse empty attributes: get `class` instead of `class=\"\"` (`boolean`,\ndefault: `false`).\n**Note**: boolean attributes, such as `hidden`, are always collapsed.\n\nNot used in the SVG space.\n\n###### `options.closeSelfClosing`\n\nClose self-closing nodes with an extra slash (`/`): `<img />` instead of\n`<img>` (`boolean`, default: `false`).\nSee `tightSelfClosing` to control whether a space is used before the slash.\n\nNot used in the SVG space.\n\n###### `options.closeEmptyElements`\n\nClose SVG elements without any content with slash (`/`) on the opening tag\ninstead of an end tag: `<circle />` instead of `<circle></circle>` (`boolean`,\ndefault: `false`).\nSee `tightSelfClosing` to control whether a space is used before the slash.\n\nNot used in the HTML space.\n\n###### `options.tightSelfClosing`\n\nDo not use an extra space when closing self-closing elements: `<img/>` instead\nof `<img />` (`boolean`, default: `false`).\n**Note**: Only used if `closeSelfClosing: true` or `closeEmptyElements: true`.\n\n###### `options.tightCommaSeparatedLists`\n\nJoin known comma-separated attribute values with just a comma (`,`), instead of\npadding them on the right as well (`,·`, where `·` represents a space)\n(`boolean`, default: `false`).\n\n###### `options.tightAttributes`\n\nJoin attributes together, without white-space, if possible: get\n`class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save bytes\n(`boolean`, default: `false`).\n**Note**: creates invalid (but working) markup.\n\nNot used in the SVG space.\n\n###### `options.tightDoctype`\n\nDrop unneeded spaces in doctypes: `<!doctypehtml>` instead of `<!doctype html>`\nto save bytes (`boolean`, default: `false`).\n**Note**: creates invalid (but working) markup.\n\n###### `options.bogusComments`\n\nUse “bogus comments” instead of comments to save byes: `<?charlie>` instead of\n`<!--charlie-->` (`boolean`, default: `false`).\n**Note**: creates invalid (but working) markup.\n\n###### `options.allowParseErrors`\n\nDo not encode characters which cause parse errors (even though they work), to\nsave bytes (`boolean`, default: `false`).\n**Note**: creates invalid (but working) markup.\n\nNot used in the SVG space.\n\n###### `options.allowDangerousCharacters`\n\nDo not encode some characters which cause XSS vulnerabilities in older browsers\n(`boolean`, default: `false`).\n**Note**: Only set this if you completely trust the content.\n\n###### `options.allowDangerousHtml`\n\nAllow `raw` nodes and insert them as raw HTML.\nWhen falsey, encodes `raw` nodes (`boolean`, default: `false`).\n**Note**: Only set this if you completely trust the content.\n\n## Security\n\nUse of `hast-util-to-html` can open you up to a\n[cross-site scripting (XSS)][xss] attack if the hast tree is unsafe.\nUse [`hast-util-santize`][sanitize] to make the hast tree safe.\n\n## Related\n\n*   [`hast-util-sanitize`][sanitize]\n    — Sanitize hast nodes\n*   [`rehype-stringify`](https://github.com/wooorm/rehype/tree/master/packages/rehype-stringify)\n    — Wrapper around this project for [**rehype**](https://github.com/wooorm/rehype)\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/hast-util-to-html.svg\n\n[build]: https://travis-ci.org/syntax-tree/hast-util-to-html\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-to-html.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/hast-util-to-html\n\n[downloads-badge]: https://img.shields.io/npm/dm/hast-util-to-html.svg\n\n[downloads]: https://www.npmjs.com/package/hast-util-to-html\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/hast-util-to-html.svg\n\n[size]: https://bundlephobia.com/result?p=hast-util-to-html\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/syntax-tree\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/master/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/master/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/master/code-of-conduct.md\n\n[html-void-elements]: https://github.com/wooorm/html-void-elements\n\n[stringify-entities]: https://github.com/wooorm/stringify-entities\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[root]: https://github.com/syntax-tree/unist#root\n\n[hast]: https://github.com/syntax-tree/hast\n\n[element]: https://github.com/syntax-tree/hast#element\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[sanitize]: https://github.com/syntax-tree/hast-util-sanitize\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hast-util-to-html/-/hast-util-to-html-7.1.1.tgz#39818b8bbfcb8eaa87846a120b3875487b27d094",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hast-util-to-html/-/hast-util-to-html-7.1.1.tgz",
    "hash": "39818b8bbfcb8eaa87846a120b3875487b27d094",
    "integrity": "sha512-Ujqj0hGuo3dIQKilkbauAv5teOqPvhaSLEgs1lgApFT0812e114KiffV8XfE4ttR8dRPqxNOIJOMu6SKOVOGlg==",
    "registry": "npm",
    "packageName": "hast-util-to-html",
    "cacheIntegrity": "sha512-Ujqj0hGuo3dIQKilkbauAv5teOqPvhaSLEgs1lgApFT0812e114KiffV8XfE4ttR8dRPqxNOIJOMu6SKOVOGlg== sha1-OYGLi7/LjqqHhGoSCzh1SHsn0JQ="
  },
  "registry": "npm",
  "hash": "39818b8bbfcb8eaa87846a120b3875487b27d094"
}